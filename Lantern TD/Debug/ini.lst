SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Mar-2023 23:21:28  PAGE    1

************ OBJECT LISTING ************

FILE NAME: D:\Lantern TD\Lantern TD\ini.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

           ini.c     1    #include "fxlib.h"
           ini.c     2    #include "Fun.h"
           ini.c     3    #include "stdlib.h"
           ini.c     4    #include "string.h"
           ini.c     5    
           ini.c     6    FONTCHARACTER *char_to_font(const char *cFileName, FONTCHARACTER *fFileName)
P   00000000              _char_to_font:                   ; function: char_to_font
                                                           ; frame size=12
    00000000 2FE6                   MOV.L       R14,@-R15
    00000002 2FD6                   MOV.L       R13,@-R15
    00000004 4F22                   STS.L       PR,@-R15
    00000006 6D43                   MOV         R4,R13
           ini.c     7    {
           ini.c     8        int i, len = strlen(cFileName);
    00000008 D385                   MOV.L       L413,R3    ; _strlen
    0000000A 430B                   JSR         @R3
    0000000C 6E53                   MOV         R5,R14
    0000000E 6503                   MOV         R0,R5
           ini.c     9        for (i = 0; i < len; ++i)
    00000010 E600                   MOV         #0,R6
    00000012 4515                   CMP/PL      R5
    00000014 8F09                   BF/S        L394
    00000016 6463                   MOV         R6,R4
    00000018              L395:                             
           ini.c    10            fFileName[i] = cFileName[i];
    00000018 6343                   MOV         R4,R3
    0000001A 4300                   SHLL        R3
    0000001C 33EC                   ADD         R14,R3
    0000001E 6043                   MOV         R4,R0
    00000020 02DC                   MOV.B       @(R0,R13),R2
    00000022 7401                   ADD         #1,R4
    00000024 2321                   MOV.W       R2,@R3
    00000026 3453                   CMP/GE      R5,R4
    00000028 8BF6                   BF          L395
    0000002A              L394:                             
           ini.c    11        fFileName[i] = 0;
    0000002A 6043                   MOV         R4,R0
    0000002C 4000                   SHLL        R0
    0000002E 0E65                   MOV.W       R6,@(R0,R14)
           ini.c    12        return fFileName;
           ini.c    13    }
    00000030 4F26                   LDS.L       @R15+,PR
    00000032 60E3                   MOV         R14,R0
    00000034 6DF6                   MOV.L       @R15+,R13
    00000036 000B                   RTS
    00000038 6EF6                   MOV.L       @R15+,R14
           ini.c    14    
           ini.c    15    int read_text_file(char **text)
    0000003A              _read_text_file:                 ; function: read_text_file
                                                           ; frame size=80
    0000003A 2FE6                   MOV.L       R14,@-R15
    0000003C 2FD6                   MOV.L       R13,@-R15
    0000003E 6D43                   MOV         R4,R13
    00000040 2FC6                   MOV.L       R12,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Mar-2023 23:21:28  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000042 4F22                   STS.L       PR,@-R15
           ini.c    16    {
           ini.c    17        int file_handle, len;
           ini.c    18        FONTCHARACTER font_file_name[32];
           ini.c    19        char_to_font("\\\\crd0\\tower.txt", font_file_name);
    00000044 D477                   MOV.L       L413+4,R4  ; L359
    00000046 7FC0                   ADD         #-64,R15
    00000048 BFDA                   BSR         _char_to_font
    0000004A 65F3                   MOV         R15,R5
           ini.c    20        file_handle = Bfile_OpenFile(font_file_name, _OPENMODE_READ);
    0000004C D276                   MOV.L       L413+8,R2  ; _Bfile_OpenFile
    0000004E E501                   MOV         #1,R5
    00000050 420B                   JSR         @R2
    00000052 64F3                   MOV         R15,R4
    00000054 6E03                   MOV         R0,R14
           ini.c    21        if (file_handle < 0)
    00000056 4E11                   CMP/PZ      R14
    00000058 8901                   BT          L397
           ini.c    22            return -1;
    0000005A A01B                   BRA         L398
    0000005C E0FF                   MOV         #-1,R0
    0000005E              L397:                             
           ini.c    23        len = Bfile_GetFileSize(file_handle);
    0000005E D273                   MOV.L       L413+12,R2 ; _Bfile_GetFileSize
    00000060 420B                   JSR         @R2
    00000062 64E3                   MOV         R14,R4
           ini.c    24        *text = (char *)malloc(len + 1);
    00000064 D372                   MOV.L       L413+16,R3 ; _malloc
    00000066 6C03                   MOV         R0,R12
    00000068 6403                   MOV         R0,R4
    0000006A 430B                   JSR         @R3
    0000006C 7401                   ADD         #1,R4
           ini.c    25        if (*text == 0)
    0000006E 6203                   MOV         R0,R2
    00000070 2228                   TST         R2,R2
    00000072 8F02                   BF/S        L399
    00000074 2D02                   MOV.L       R0,@R13
           ini.c    26            return 0;
    00000076 A00D                   BRA         L398
    00000078 E000                   MOV         #0,R0
    0000007A              L399:                             
           ini.c    27        Bfile_ReadFile(file_handle, *text, len, 0);
    0000007A E700                   MOV         #0,R7
    0000007C 65D2                   MOV.L       @R13,R5
    0000007E 66C3                   MOV         R12,R6
    00000080 D36C                   MOV.L       L413+20,R3 ; _Bfile_ReadFile
    00000082 430B                   JSR         @R3
    00000084 64E3                   MOV         R14,R4
           ini.c    28        Bfile_CloseFile(file_handle);
    00000086 D26C                   MOV.L       L413+24,R2 ; _Bfile_CloseFile
    00000088 420B                   JSR         @R2
    0000008A 64E3                   MOV         R14,R4
           ini.c    29        (*text)[len] = '\0';
    0000008C 60D2                   MOV.L       @R13,R0
    0000008E E300                   MOV         #0,R3
    00000090 0C34                   MOV.B       R3,@(R0,R12)
           ini.c    30        return 1;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Mar-2023 23:21:28  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000092 E001                   MOV         #1,R0
           ini.c    31    }
    00000094              L398:                             
    00000094 7F40                   ADD         #64,R15
    00000096 4F26                   LDS.L       @R15+,PR
    00000098 6CF6                   MOV.L       @R15+,R12
    0000009A 6DF6                   MOV.L       @R15+,R13
    0000009C 000B                   RTS
    0000009E 6EF6                   MOV.L       @R15+,R14
           ini.c    32    
           ini.c    33    int GetInKeyString(LPTOWER Tower_database[], int *Tower_DbSize)
    000000A0              _GetInKeyString:                 ; function: GetInKeyString
                                                           ; frame size=80
    000000A0 2FE6                   MOV.L       R14,@-R15
           ini.c    34    {
           ini.c    35        int filehandle, index;
           ini.c    36        int i, j;
           ini.c    37        char *Tower_Config;
           ini.c    38        char *value;
           ini.c    39        char bufLine[20];
           ini.c    40    
           ini.c    41        index = 0;
           ini.c    42        i = 0;
           ini.c    43        j = -1;
    000000A2 E3FF                   MOV         #-1,R3
    000000A4 2FD6                   MOV.L       R13,@-R15
    000000A6 2FC6                   MOV.L       R12,@-R15
    000000A8 2FB6                   MOV.L       R11,@-R15
    000000AA 2FA6                   MOV.L       R10,@-R15
    000000AC 2F96                   MOV.L       R9,@-R15
    000000AE 2F86                   MOV.L       R8,@-R15
    000000B0 4F22                   STS.L       PR,@-R15
    000000B2 E800                   MOV         #0,R8
    000000B4 7FD4                   ADD         #-44,R15
    000000B6 6B83                   MOV         R8,R11
    000000B8 1F43                   MOV.L       R4,@(12,R15)
    000000BA 6983                   MOV         R8,R9
    000000BC 1F54                   MOV.L       R5,@(16,R15)
    000000BE 1F32                   MOV.L       R3,@(8,R15)
           ini.c    44    
           ini.c    45        filehandle = read_text_file(&Tower_Config);
    000000C0 BFBB                   BSR         _read_text_file
    000000C2 64F3                   MOV         R15,R4
    000000C4 6403                   MOV         R0,R4
           ini.c    46    
           ini.c    47        if (filehandle <= 0)
    000000C6 4415                   CMP/PL      R4
    000000C8 8901                   BT          L400
           ini.c    48        {
           ini.c    49            return 0;
    000000CA A09F                   BRA         L401
    000000CC E000                   MOV         #0,R0
    000000CE              L400:                             
    000000CE 6EF3                   MOV         R15,R14
    000000D0 DC5A                   MOV.L       L413+28,R12; L378
    000000D2 7E18                   ADD         #24,R14
    000000D4 DD5A                   MOV.L       L413+32,R13; _strstr




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Mar-2023 23:21:28  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000D6 62E3                   MOV         R14,R2
           ini.c    50        }
           ini.c    51        else
           ini.c    52        {
           ini.c    53    
           ini.c    54            while (Tower_Config[index] != '\0')
    000000D8 A08E                   BRA         L403
    000000DA 1F25                   MOV.L       R2,@(20,R15)
    000000DC              L404:                             
           ini.c    55            {
           ini.c    56                memset(bufLine, 0, sizeof(char) * 20);
    000000DC D259                   MOV.L       L413+36,R2 ; _memset
    000000DE E614                   MOV         #20,R6
    000000E0 E500                   MOV         #0,R5
    000000E2 420B                   JSR         @R2
    000000E4 64E3                   MOV         R14,R4
           ini.c    57                while (Tower_Config[index] != '\n')
    000000E6 A008                   BRA         L405
    000000E8 0009                   NOP
    000000EA              L406:                             
           ini.c    58                {
           ini.c    59                    bufLine[i] = Tower_Config[index];
    000000EA 60E3                   MOV         R14,R0
    000000EC 60F2                   MOV.L       @R15,R0
    000000EE 62E3                   MOV         R14,R2
    000000F0 03BC                   MOV.B       @(R0,R11),R3
    000000F2 329C                   ADD         R9,R2
    000000F4 2230                   MOV.B       R3,@R2
           ini.c    60                    i++;
    000000F6 7901                   ADD         #1,R9
           ini.c    61                    index++;
    000000F8 7B01                   ADD         #1,R11
    000000FA              L405:                             
    000000FA 60F2                   MOV.L       @R15,R0
    000000FC 00BC                   MOV.B       @(R0,R11),R0
    000000FE 880A                   CMP/EQ      #10,R0
    00000100 8BF3                   BF          L406
           ini.c    62                }
           ini.c    63                bufLine[i - 1] = '\0';
    00000102 6093                   MOV         R9,R0
    00000104 70FF                   ADD         #-1,R0
    00000106 0E84                   MOV.B       R8,@(R0,R14)
           ini.c    64                i = 0;
           ini.c    65                if (bufLine[0] == '#')
    00000108 50F5                   MOV.L       @(20,R15),R0
    0000010A 6000                   MOV.B       @R0,R0
    0000010C 8823                   CMP/EQ      #35,R0
    0000010E 8F13                   BF/S        L407
    00000110 6983                   MOV         R8,R9
           ini.c    66                {
           ini.c    67                    j++;
    00000112 52F2                   MOV.L       @(8,R15),R2
           ini.c    68                    Tower_database[j] = (LPTOWER)malloc(sizeof(Tower));
    00000114 D346                   MOV.L       L413+16,R3 ; _malloc
    00000116 7201                   ADD         #1,R2
    00000118 1F22                   MOV.L       R2,@(8,R15)
    0000011A 4208                   SHLL2       R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Mar-2023 23:21:28  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000011C 50F3                   MOV.L       @(12,R15),R0
    0000011E 302C                   ADD         R2,R0
    00000120 2F06                   MOV.L       R0,@-R15
    00000122 430B                   JSR         @R3
    00000124 E41C                   MOV         #28,R4
    00000126 61F6                   MOV.L       @R15+,R1
    00000128 2102                   MOV.L       R0,@R1
           ini.c    69                    *Tower_DbSize = *Tower_DbSize + 1;
    0000012A 53F4                   MOV.L       @(16,R15),R3
    0000012C 6233                   MOV         R3,R2
    0000012E 6122                   MOV.L       @R2,R1
    00000130 7101                   ADD         #1,R1
    00000132 2312                   MOV.L       R1,@R3
           ini.c    70                    continue;
    00000134 A060                   BRA         L403
    00000136 0009                   NOP
    00000138              L407:                             
    00000138 5AF2                   MOV.L       @(8,R15),R10
    0000013A 4A08                   SHLL2       R10
    0000013C 53F3                   MOV.L       @(12,R15),R3
    0000013E 3A3C                   ADD         R3,R10
    00000140 D541                   MOV.L       L413+40,R5 ; L376
    00000142 4D0B                   JSR         @R13
    00000144 64E3                   MOV         R14,R4
    00000146 2008                   TST         R0,R0
    00000148 890B                   BT          L408
           ini.c    71                }
           ini.c    72                if (strstr(bufLine, (char *)"id"))
           ini.c    73                {
           ini.c    74                    value = strstr(bufLine, (char *)"=");
    0000014A 65C3                   MOV         R12,R5
    0000014C 4D0B                   JSR         @R13
    0000014E 64E3                   MOV         R14,R4
    00000150 1F01                   MOV.L       R0,@(4,R15)
           ini.c    75                    Tower_database[j]->id = my_atoi(value + 1);
    00000152 63A2                   MOV.L       @R10,R3
    00000154 2F36                   MOV.L       R3,@-R15
    00000156 54F2                   MOV.L       @(8,R15),R4
    00000158 D33C                   MOV.L       L413+44,R3 ; _my_atoi
    0000015A 430B                   JSR         @R3
    0000015C 7401                   ADD         #1,R4
    0000015E 62F6                   MOV.L       @R15+,R2
    00000160 2202                   MOV.L       R0,@R2
    00000162              L408:                             
           ini.c    76                }
           ini.c    77                if (strstr(bufLine, (char *)"Tower_Level"))
    00000162 D53B                   MOV.L       L413+48,R5 ; L379
    00000164 4D0B                   JSR         @R13
    00000166 64E3                   MOV         R14,R4
    00000168 2008                   TST         R0,R0
    0000016A 890D                   BT          L409
           ini.c    78                {
           ini.c    79                    value = strstr(bufLine, (char *)"=");
    0000016C 65C3                   MOV         R12,R5
    0000016E 4D0B                   JSR         @R13
    00000170 64E3                   MOV         R14,R4
           ini.c    80                    Tower_database[j]->Tower_Level = my_atoi(value + 1);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Mar-2023 23:21:28  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000172 E204                   MOV         #4,R2
    00000174 1F01                   MOV.L       R0,@(4,R15)
    00000176 63A2                   MOV.L       @R10,R3
    00000178 323C                   ADD         R3,R2
    0000017A 2F26                   MOV.L       R2,@-R15
    0000017C 54F2                   MOV.L       @(8,R15),R4
    0000017E D333                   MOV.L       L413+44,R3 ; _my_atoi
    00000180 430B                   JSR         @R3
    00000182 7401                   ADD         #1,R4
    00000184 61F6                   MOV.L       @R15+,R1
    00000186 2102                   MOV.L       R0,@R1
    00000188              L409:                             
           ini.c    81                }
           ini.c    82                if (strstr(bufLine, (char *)"Attack"))
    00000188 D532                   MOV.L       L413+52,R5 ; L381
    0000018A 4D0B                   JSR         @R13
    0000018C 64E3                   MOV         R14,R4
    0000018E 2008                   TST         R0,R0
    00000190 890C                   BT          L410
           ini.c    83                {
           ini.c    84                    value = strstr(bufLine, (char *)"=");
    00000192 65C3                   MOV         R12,R5
    00000194 4D0B                   JSR         @R13
    00000196 64E3                   MOV         R14,R4
    00000198 1F01                   MOV.L       R0,@(4,R15)
           ini.c    85                    Tower_database[j]->Attack = atof(value + 1);
    0000019A 6403                   MOV         R0,R4
    0000019C 63A2                   MOV.L       @R10,R3
    0000019E E208                   MOV         #8,R2
    000001A0 7401                   ADD         #1,R4
    000001A2 323C                   ADD         R3,R2
    000001A4 D32C                   MOV.L       L413+56,R3 ; _atof
    000001A6 430B                   JSR         @R3
    000001A8 2F26                   MOV.L       R2,@-R15
    000001AA 7F04                   ADD         #4,R15
    000001AC              L410:                             
           ini.c    86                }
           ini.c    87                if (strstr(bufLine, (char *)"Attack_Frequency"))
    000001AC D52B                   MOV.L       L413+60,R5 ; L383
    000001AE 4D0B                   JSR         @R13
    000001B0 64E3                   MOV         R14,R4
    000001B2 2008                   TST         R0,R0
    000001B4 890C                   BT          L411
           ini.c    88                {
           ini.c    89                    value = strstr(bufLine, (char *)"=");
    000001B6 65C3                   MOV         R12,R5
    000001B8 4D0B                   JSR         @R13
    000001BA 64E3                   MOV         R14,R4
    000001BC 1F01                   MOV.L       R0,@(4,R15)
           ini.c    90                    Tower_database[j]->Attack_Frequency = atof(value + 1);
    000001BE 6403                   MOV         R0,R4
    000001C0 63A2                   MOV.L       @R10,R3
    000001C2 E210                   MOV         #16,R2
    000001C4 7401                   ADD         #1,R4
    000001C6 323C                   ADD         R3,R2
    000001C8 D323                   MOV.L       L413+56,R3 ; _atof
    000001CA 430B                   JSR         @R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Mar-2023 23:21:28  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000001CC 2F26                   MOV.L       R2,@-R15
    000001CE 7F04                   ADD         #4,R15
    000001D0              L411:                             
           ini.c    91                }
           ini.c    92                if (strstr(bufLine, (char *)"Attack_Range"))
    000001D0 D523                   MOV.L       L413+64,R5 ; L385
    000001D2 4D0B                   JSR         @R13
    000001D4 64E3                   MOV         R14,R4
    000001D6 2008                   TST         R0,R0
    000001D8 890D                   BT          L412
           ini.c    93                {
           ini.c    94                    value = strstr(bufLine, (char *)"=");
    000001DA 65C3                   MOV         R12,R5
    000001DC 4D0B                   JSR         @R13
    000001DE 64E3                   MOV         R14,R4
    000001E0 1F01                   MOV.L       R0,@(4,R15)
           ini.c    95                    Tower_database[j]->Attack_Range = my_atoi(value + 1);
    000001E2 E218                   MOV         #24,R2
    000001E4 63A2                   MOV.L       @R10,R3
    000001E6 323C                   ADD         R3,R2
    000001E8 2F26                   MOV.L       R2,@-R15
    000001EA 54F2                   MOV.L       @(8,R15),R4
    000001EC D317                   MOV.L       L413+44,R3 ; _my_atoi
    000001EE 430B                   JSR         @R3
    000001F0 7401                   ADD         #1,R4
    000001F2 61F6                   MOV.L       @R15+,R1
    000001F4 2102                   MOV.L       R0,@R1
    000001F6              L412:                             
           ini.c    96                }
           ini.c    97                index++;
    000001F6 7B01                   ADD         #1,R11
    000001F8              L403:                             
    000001F8 60F2                   MOV.L       @R15,R0
    000001FA 03BC                   MOV.B       @(R0,R11),R3
    000001FC 2338                   TST         R3,R3
    000001FE 8901                   BT          L414
    00000200 AF6C                   BRA         L404
    00000202 0009                   NOP
    00000204              L414:                             
           ini.c    98            }
           ini.c    99            free(Tower_Config);
    00000204 D317                   MOV.L       L413+68,R3 ; _free
    00000206 430B                   JSR         @R3
    00000208 64F2                   MOV.L       @R15,R4
           ini.c   100            return 1;
    0000020A E001                   MOV         #1,R0
           ini.c   101        }
           ini.c   102    }
    0000020C              L401:                             
    0000020C 7F2C                   ADD         #44,R15
    0000020E 4F26                   LDS.L       @R15+,PR
    00000210 68F6                   MOV.L       @R15+,R8
    00000212 69F6                   MOV.L       @R15+,R9
    00000214 6AF6                   MOV.L       @R15+,R10
    00000216 6BF6                   MOV.L       @R15+,R11
    00000218 6CF6                   MOV.L       @R15+,R12
    0000021A 6DF6                   MOV.L       @R15+,R13




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Mar-2023 23:21:28  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000021C 000B                   RTS
    0000021E 6EF6                   MOV.L       @R15+,R14
    00000220              L413:                             
    00000220 <00000000>             .DATA.L     _strlen
    00000224 <00000000>             .DATA.L     L359
    00000228 <00000000>             .DATA.L     _Bfile_OpenFile
    0000022C <00000000>             .DATA.L     _Bfile_GetFileSize
    00000230 <00000000>             .DATA.L     _malloc
    00000234 <00000000>             .DATA.L     _Bfile_ReadFile
    00000238 <00000000>             .DATA.L     _Bfile_CloseFile
    0000023C <00000000>             .DATA.L     L378
    00000240 <00000000>             .DATA.L     _strstr
    00000244 <00000000>             .DATA.L     _memset
    00000248 <00000000>             .DATA.L     L376
    0000024C <00000000>             .DATA.L     _my_atoi
    00000250 <00000000>             .DATA.L     L379
    00000254 <00000000>             .DATA.L     L381
    00000258 <00000000>             .DATA.L     _atof
    0000025C <00000000>             .DATA.L     L383
    00000260 <00000000>             .DATA.L     L385
    00000264 <00000000>             .DATA.L     _free
C   00000000              L359:
    00000000 5C5C637264             .SDATA      "\\crd0\tower.txt"
             305C746F77   
             65722E7478   
             74           
    00000010 00                     .DATA.B     H'00
    00000011 00000001               .RES.B      1
    00000012 00000002               .RES.W      1
    00000014              L376:
    00000014 6964                   .SDATA      "id"
    00000016 00                     .DATA.B     H'00
    00000017 00000001               .RES.B      1
    00000018              L378:
    00000018 3D                     .SDATA      "="
    00000019 00                     .DATA.B     H'00
    0000001A 00000002               .RES.W      1
    0000001C              L379:
    0000001C 546F776572             .SDATA      "Tower_Level"
             5F4C657665   
             6C           
    00000027 00                     .DATA.B     H'00
    00000028              L381:
    00000028 4174746163             .SDATA      "Attack"
             6B           
    0000002E 00                     .DATA.B     H'00
    0000002F 00000001               .RES.B      1
    00000030              L383:
    00000030 4174746163             .SDATA      "Attack_Frequency"
             6B5F467265   
             7175656E63   
             79           
    00000040 00                     .DATA.B     H'00
    00000041 00000001               .RES.B      1
    00000042 00000002               .RES.W      1
    00000044              L385:
    00000044 4174746163             .SDATA      "Attack_Range"




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Mar-2023 23:21:28  PAGE    9


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             6B5F52616E   
             6765         
    00000050 00                     .DATA.B     H'00


























































SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 16-Mar-2023 23:21:28  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:      102



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               00000268 Byte(s)
CONSTANT SECTION (C):                               00000051 Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)

 TOTAL PROGRAM SIZE: 000002B9 Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:           11
NUMBER OF EXTERNAL DEFINITION SYMBOLS:           3
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            40






























*** COMMAND PARAMETER ***


  -subcommand=C:\Users\hasee\AppData\Local\Temp\hmk4599.tmp 


SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 23-Mar-2023 23:11:43  PAGE    1

************ OBJECT LISTING ************

FILE NAME: D:\c++learning\Lantern TD\LanternT.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      LanternT.c     1    
      LanternT.c     2    #include "fxlib.h"
      LanternT.c     3    #include "Fun.h"
      LanternT.c     4    #include "stdlib.h"
      LanternT.c     5    #include "pine-ini.h"
      LanternT.c     6    #include "ffun.h"
      LanternT.c     7    #include "string.h"
      LanternT.c     8    #include "astara.h"
      LanternT.c     9    #include "monster.h"
      LanternT.c    10    
      LanternT.c    11    #define MAX_NUM_OF_TOWER 1024
      LanternT.c    12    #define MAX_NUM_OF_MONSTER 100
      LanternT.c    13    
      LanternT.c    14    void pop_when_quit(void)
P   00000000              _pop_when_quit:                  ; function: pop_when_quit
                                                           ; frame size=16
    00000000 2FE6                   MOV.L       R14,@-R15
    00000002 2FD6                   MOV.L       R13,@-R15
    00000004 4F22                   STS.L       PR,@-R15
    00000006 7FFC                   ADD         #-4,R15
      LanternT.c    15    {
      LanternT.c    16        unsigned int key;
      LanternT.c    17        PopUpWin(3);
    00000008 D347                   MOV.L       L609+8,R3  ; _PopUpWin
    0000000A 430B                   JSR         @R3
    0000000C E403                   MOV         #3,R4
      LanternT.c    18        locate(7, 3);
    0000000E E503                   MOV         #3,R5
    00000010 D246                   MOV.L       L609+12,R2 ; _locate
    00000012 420B                   JSR         @R2
    00000014 E407                   MOV         #7,R4
      LanternT.c    19        Print((unsigned char *)"QUIT GAME");
    00000016 D446                   MOV.L       L609+16,R4 ; L390
    00000018 D346                   MOV.L       L609+20,R3 ; _Print
    0000001A 430B                   JSR         @R3
    0000001C 0009                   NOP
      LanternT.c    20        locate(5, 5);
    0000001E E505                   MOV         #5,R5
    00000020 D242                   MOV.L       L609+12,R2 ; _locate
    00000022 420B                   JSR         @R2
    00000024 6453                   MOV         R5,R4
      LanternT.c    21        Print((unsigned char *)"Press [EXE] key");
    00000026 D444                   MOV.L       L609+24,R4 ; L391
    00000028 D342                   MOV.L       L609+20,R3 ; _Print
    0000002A 430B                   JSR         @R3
    0000002C 0009                   NOP
    0000002E DD43                   MOV.L       L609+28,R13; _GetKey
    00000030 9E76                   MOV.W       L609,R14   ; H'7534
      LanternT.c    22        do
    00000032              L543:                             
      LanternT.c    23        {
      LanternT.c    24            GetKey(&key);
    00000032 4D0B                   JSR         @R13
    00000034 64F3                   MOV         R15,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 23-Mar-2023 23:11:43  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      LanternT.c    25        } while (key != KEY_CTRL_EXE);
    00000036 62F2                   MOV.L       @R15,R2
    00000038 32E0                   CMP/EQ      R14,R2
    0000003A 8BFA                   BF          L543
      LanternT.c    26    }
    0000003C 7F04                   ADD         #4,R15
    0000003E 4F26                   LDS.L       @R15+,PR
    00000040 6DF6                   MOV.L       @R15+,R13
    00000042 000B                   RTS
    00000044 6EF6                   MOV.L       @R15+,R14
      LanternT.c    27    
      LanternT.c    28    int AddIn_main(int isAppli, unsigned short OptionNum)
    00000046              _AddIn_main:                     ; function: AddIn_main
                                                           ; frame size=31236
                                                           ; used runtime library name:
                                                           ; __modls, __addd, __muld, __dtoi, __ged
    00000046 2FE6                   MOV.L       R14,@-R15
    00000048 2FD6                   MOV.L       R13,@-R15
      LanternT.c    29    {
      LanternT.c    30    
      LanternT.c    31        // Initialization
      LanternT.c    32    
      LanternT.c    33        PineIniFile *iniResult;
      LanternT.c    34        PineIniError errorRet;
      LanternT.c    35        PineIniSection *Section;
      LanternT.c    36    
      LanternT.c    37        char *TowerINIText;
      LanternT.c    38        char *MonsterINIText;
      LanternT.c    39    
      LanternT.c    40        int filehandle;
      LanternT.c    41    
      LanternT.c    42        unsigned int key, i, j, round, IsPlace, IsPlaceOver, IsGameOver;
      LanternT.c    43        long point;
      LanternT.c    44        double Time, timeIndex;
      LanternT.c    45        int Maps[37][37];
      LanternT.c    46        int Direction[4096];
      LanternT.c    47        LPTOWER Tower_DataBase[MAX_NUM_OF_TOWER];
      LanternT.c    48        LPTOWERPLACE Tower_PlaceTower[MAX_NUM_OF_TOWER];
      LanternT.c    49        LPTOWERPLACE Tower_Buffer[5];
      LanternT.c    50        LPMONSTER Monster_DataBase[MAX_NUM_OF_MONSTER];
      LanternT.c    51        LPMONSTERLIVE Monster_LiveMonster[MAX_NUM_OF_MONSTER];
      LanternT.c    52    
      LanternT.c    53        LPBASE base;
      LanternT.c    54    
      LanternT.c    55        int numOfPlace, numOfCurrent, numOfDirection, numOfMonster, numOfCreate;
      LanternT.c    56        int Tower_DbSize = 0, Monster_DbSize = 0;
    0000004A EE00                   MOV         #0,R14
      LanternT.c    57    
      LanternT.c    58        POSITION Cursor_position, screen_position;
      LanternT.c    59        LPPOSITION Cursor_Position, Current_Screen;
      LanternT.c    60    
      LanternT.c    61        Cursor_Position = &Cursor_position;
      LanternT.c    62        Current_Screen = &screen_position;
      LanternT.c    63    
      LanternT.c    64        Current_Screen->x = 0;
      LanternT.c    65        Current_Screen->y = 0;
      LanternT.c    66        Cursor_Position->x = 0;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 23-Mar-2023 23:11:43  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      LanternT.c    67        Cursor_Position->y = 0;
      LanternT.c    68    
      LanternT.c    69        Time = 0.1;
    0000004C D23C                   MOV.L       L609+32,R2 ; H'3FB99999
    0000004E 2FC6                   MOV.L       R12,@-R15
    00000050 2FB6                   MOV.L       R11,@-R15
    00000052 2FA6                   MOV.L       R10,@-R15
    00000054 2F96                   MOV.L       R9,@-R15
    00000056 2F86                   MOV.L       R8,@-R15
    00000058 4F22                   STS.L       PR,@-R15
    0000005A 4F12                   STS.L       MACL,@-R15
    0000005C 9061                   MOV.W       L609+2,R0  ; H'865C
    0000005E 3F0C                   ADD         R0,R15
    00000060 1FE9                   MOV.L       R14,@(36,R15)
    00000062 63F3                   MOV         R15,R3
    00000064 1FEE                   MOV.L       R14,@(56,R15)
    00000066 6AF3                   MOV         R15,R10
    00000068 7354                   ADD         #84,R3
    0000006A 7A4C                   ADD         #76,R10
    0000006C 1F34                   MOV.L       R3,@(16,R15)
    0000006E 2AE2                   MOV.L       R14,@R10
    00000070 1AE1                   MOV.L       R14,@(4,R10)
    00000072 53F4                   MOV.L       @(16,R15),R3
    00000074 23E2                   MOV.L       R14,@R3
    00000076 53F4                   MOV.L       @(16,R15),R3
    00000078 13E1                   MOV.L       R14,@(4,R3)
    0000007A 9353                   MOV.W       L609+4,R3  ; H'78FC
    0000007C 33FC                   ADD         R15,R3
    0000007E 2322                   MOV.L       R2,@R3
    00000080 D230                   MOV.L       L609+36,R2 ; H'9999999A
    00000082 1321                   MOV.L       R2,@(4,R3)
      LanternT.c    70        timeIndex = 0;
    00000084 914F                   MOV.W       L609+6,R1  ; H'78F4
    00000086 60E3                   MOV         R14,R0
      LanternT.c    71        round = 1;
      LanternT.c    72        IsPlace = 1;
      LanternT.c    73        IsPlaceOver = 0;
      LanternT.c    74        IsGameOver = 0;
      LanternT.c    75        numOfPlace = 0;
      LanternT.c    76        numOfCurrent = 0;
      LanternT.c    77        numOfDirection = 0;
      LanternT.c    78        numOfCreate = 0;
      LanternT.c    79        numOfMonster = 0;
      LanternT.c    80        point = 0;
      LanternT.c    81    
      LanternT.c    82        base = (LPBASE)malloc(sizeof(base));
    00000088 D32F                   MOV.L       L609+40,R3 ; _malloc
    0000008A ED01                   MOV         #1,R13
    0000008C 31FC                   ADD         R15,R1
    0000008E 21E2                   MOV.L       R14,@R1
    00000090 1101                   MOV.L       R0,@(4,R1)
    00000092 E048                   MOV         #72,R0
    00000094 1FDC                   MOV.L       R13,@(48,R15)
    00000096 0FD6                   MOV.L       R13,@(R0,R15)
    00000098 1FE7                   MOV.L       R14,@(28,R15)
    0000009A E044                   MOV         #68,R0
    0000009C 0FE6                   MOV.L       R14,@(R0,R15)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 23-Mar-2023 23:11:43  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000009E 1FE5                   MOV.L       R14,@(20,R15)
    000000A0 1FED                   MOV.L       R14,@(52,R15)
    000000A2 1FEB                   MOV.L       R14,@(44,R15)
    000000A4 1FEA                   MOV.L       R14,@(40,R15)
    000000A6 1FE2                   MOV.L       R14,@(8,R15)
    000000A8 430B                   JSR         @R3
    000000AA E404                   MOV         #4,R4
    000000AC 1F03                   MOV.L       R0,@(12,R15)
      LanternT.c    83        base->damage = 0;
    000000AE 6303                   MOV         R0,R3
      LanternT.c    84        base->health = 100;
      LanternT.c    85    
      LanternT.c    86        SetQuitHandler(pop_when_quit);
    000000B0 D427                   MOV.L       L609+48,R4 ; _pop_when_quit
    000000B2 62E3                   MOV         R14,R2
    000000B4 7308                   ADD         #8,R3
    000000B6 23E2                   MOV.L       R14,@R3
    000000B8 1321                   MOV.L       R2,@(4,R3)
    000000BA 53F3                   MOV.L       @(12,R15),R3
    000000BC D223                   MOV.L       L609+44,R2 ; H'40590000
    000000BE 2322                   MOV.L       R2,@R3
    000000C0 13E1                   MOV.L       R14,@(4,R3)
    000000C2 D324                   MOV.L       L609+52,R3 ; _SetQuitHandler
    000000C4 430B                   JSR         @R3
    000000C6 62E3                   MOV         R14,R2
      LanternT.c    87    
      LanternT.c    88        // TowerDbRead
      LanternT.c    89        filehandle = read_text_file(&TowerINIText, (char *)"\\\\crd0\\tower.txt");
    000000C8 D523                   MOV.L       L609+56,R5 ; L432
    000000CA 64F3                   MOV         R15,R4
    000000CC D223                   MOV.L       L609+60,R2 ; _read_text_file
    000000CE 420B                   JSR         @R2
    000000D0 7440                   ADD         #64,R4
    000000D2 6403                   MOV         R0,R4
      LanternT.c    90    
      LanternT.c    91        if (filehandle <= 0)
    000000D4 D819                   MOV.L       L609+28,R8 ; _GetKey
    000000D6 4415                   CMP/PL      R4
    000000D8 8946                   BT          L544
      LanternT.c    92        {
      LanternT.c    93            PopUpWin(3);
    000000DA D213                   MOV.L       L609+8,R2  ; _PopUpWin
    000000DC 420B                   JSR         @R2
    000000DE E403                   MOV         #3,R4
      LanternT.c    94            locate(5, 3);
    000000E0 D312                   MOV.L       L609+12,R3 ; _locate
    000000E2 E503                   MOV         #3,R5
    000000E4 430B                   JSR         @R3
    000000E6 E405                   MOV         #5,R4
      LanternT.c    95            Print((unsigned char *)"Read DATABASE");
    000000E8 D41D                   MOV.L       L609+64,R4 ; L434
    000000EA D212                   MOV.L       L609+20,R2 ; _Print
    000000EC 420B                   JSR         @R2
    000000EE 0009                   NOP
      LanternT.c    96            locate(5, 4);
    000000F0 D30E                   MOV.L       L609+12,R3 ; _locate
    000000F2 E504                   MOV         #4,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 23-Mar-2023 23:11:43  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000F4 430B                   JSR         @R3
    000000F6 E405                   MOV         #5,R4
      LanternT.c    97            Print((unsigned char *)"ERROR");
    000000F8 D41A                   MOV.L       L609+68,R4 ; L435
    000000FA D20E                   MOV.L       L609+20,R2 ; _Print
    000000FC 420B                   JSR         @R2
    000000FE 0009                   NOP
      LanternT.c    98            locate(5, 5);
    00000100 D30A                   MOV.L       L609+12,R3 ; _locate
    00000102 E505                   MOV         #5,R5
    00000104 430B                   JSR         @R3
    00000106 6453                   MOV         R5,R4
      LanternT.c    99            Print((unsigned char *)"Press [EXE] key");
    00000108 D40B                   MOV.L       L609+24,R4 ; L391
    0000010A D20A                   MOV.L       L609+20,R2 ; _Print
    0000010C 420B                   JSR         @R2
    0000010E 0009                   NOP
      LanternT.c   100            do
    00000110              L545:                             
      LanternT.c   101            {
      LanternT.c   102                GetKey(&key);
    00000110 480B                   JSR         @R8
    00000112 64F3                   MOV         R15,R4
      LanternT.c   103            } while (key != KEY_CTRL_EXE);
    00000114 9304                   MOV.W       L609,R3    ; H'7534
    00000116 62F2                   MOV.L       @R15,R2
    00000118 3230                   CMP/EQ      R3,R2
    0000011A 8BF9                   BF          L545
    0000011C A15E                   BRA         L606
    0000011E 0009                   NOP
    00000120              L609:                             
    00000120 7534                   .DATA.W     H'7534
    00000122 865C                   .DATA.W     H'865C
    00000124 78FC                   .DATA.W     H'78FC
    00000126 78F4                   .DATA.W     H'78F4
    00000128 <00000000>             .DATA.L     _PopUpWin
    0000012C <00000000>             .DATA.L     _locate
    00000130 <00000000>             .DATA.L     L390
    00000134 <00000000>             .DATA.L     _Print
    00000138 <00000000>             .DATA.L     L391
    0000013C <00000000>             .DATA.L     _GetKey
    00000140 3FB99999               .DATA.L     H'3FB99999
    00000144 9999999A               .DATA.L     H'9999999A
    00000148 <00000000>             .DATA.L     _malloc
    0000014C 40590000               .DATA.L     H'40590000
    00000150 <00000000>             .DATA.L     _pop_when_quit
    00000154 <00000000>             .DATA.L     _SetQuitHandler
    00000158 <00000000>             .DATA.L     L432
    0000015C <00000000>             .DATA.L     _read_text_file
    00000160 <00000000>             .DATA.L     L434
    00000164 <00000000>             .DATA.L     L435
    00000168              L544:                             
      LanternT.c   104            return 0;
      LanternT.c   105        }
      LanternT.c   106    
      LanternT.c   107        iniResult = PineIni_Parse(TowerINIText, &errorRet);
    00000168 953E                   MOV.W       L610,R5    ; H'7904




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 23-Mar-2023 23:11:43  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000016A E040                   MOV         #64,R0
    0000016C D320                   MOV.L       L610+8,R3  ; _PineIni_Parse
    0000016E 35FC                   ADD         R15,R5
    00000170 430B                   JSR         @R3
    00000172 04FE                   MOV.L       @(R0,R15),R4
    00000174 1F08                   MOV.L       R0,@(32,R15)
      LanternT.c   108        free(TowerINIText);
    00000176 E040                   MOV         #64,R0
    00000178 D31E                   MOV.L       L610+12,R3 ; _free
    0000017A 430B                   JSR         @R3
    0000017C 04FE                   MOV.L       @(R0,R15),R4
      LanternT.c   109    
      LanternT.c   110        if (iniResult == NULL)
    0000017E 52F8                   MOV.L       @(32,R15),R2
    00000180 2228                   TST         R2,R2
    00000182 8B2D                   BF          L547
      LanternT.c   111        {
      LanternT.c   112            PopUpWin(5);
    00000184 D31C                   MOV.L       L610+16,R3 ; _PopUpWin
    00000186 430B                   JSR         @R3
    00000188 E405                   MOV         #5,R4
      LanternT.c   113            locate(9, 2);
    0000018A E502                   MOV         #2,R5
    0000018C D21B                   MOV.L       L610+20,R2 ; _locate
    0000018E 420B                   JSR         @R2
    00000190 E409                   MOV         #9,R4
      LanternT.c   114            Print((unsigned char *)"ERROR");
    00000192 D41B                   MOV.L       L610+24,R4 ; L435
    00000194 D31B                   MOV.L       L610+28,R3 ; _Print
    00000196 430B                   JSR         @R3
    00000198 0009                   NOP
      LanternT.c   115            printf_pop_xy(5, 3, "Error Code:%d", errorRet.errorCode);
    0000019A E503                   MOV         #3,R5
    0000019C 9024                   MOV.W       L610,R0    ; H'7904
    0000019E 02FE                   MOV.L       @(R0,R15),R2
    000001A0 D319                   MOV.L       L610+32,R3 ; L438
    000001A2 2F26                   MOV.L       R2,@-R15
    000001A4 2F36                   MOV.L       R3,@-R15
    000001A6 D219                   MOV.L       L610+36,R2 ; _printf_pop_xy
    000001A8 420B                   JSR         @R2
    000001AA E405                   MOV         #5,R4
      LanternT.c   116            printf_pop_xy(5, 4, "Line Number:%d", errorRet.lineNumber);
    000001AC 901D                   MOV.W       L610+2,R0  ; H'7910
    000001AE E504                   MOV         #4,R5
    000001B0 D217                   MOV.L       L610+40,R2 ; L439
    000001B2 03FE                   MOV.L       @(R0,R15),R3
    000001B4 2F36                   MOV.L       R3,@-R15
    000001B6 2F26                   MOV.L       R2,@-R15
    000001B8 D314                   MOV.L       L610+36,R3 ; _printf_pop_xy
    000001BA 430B                   JSR         @R3
    000001BC E405                   MOV         #5,R4
    000001BE 7F10                   ADD         #16,R15
      LanternT.c   117            locate(5, 5);
    000001C0 D20E                   MOV.L       L610+20,R2 ; _locate
    000001C2 E505                   MOV         #5,R5
    000001C4 420B                   JSR         @R2
    000001C6 6453                   MOV         R5,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 23-Mar-2023 23:11:43  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      LanternT.c   118            Print((unsigned char *)"Press [EXE] key");
    000001C8 D412                   MOV.L       L610+44,R4 ; L391
    000001CA D30E                   MOV.L       L610+28,R3 ; _Print
    000001CC 430B                   JSR         @R3
    000001CE 0009                   NOP
      LanternT.c   119            do
    000001D0              L548:                             
      LanternT.c   120            {
      LanternT.c   121                GetKey(&key);
    000001D0 480B                   JSR         @R8
    000001D2 64F3                   MOV         R15,R4
      LanternT.c   122            } while (key != KEY_CTRL_EXE);
    000001D4 920A                   MOV.W       L610+4,R2  ; H'7534
    000001D6 63F2                   MOV.L       @R15,R3
    000001D8 3320                   CMP/EQ      R2,R3
    000001DA 8BF9                   BF          L548
    000001DC A0FE                   BRA         L606
    000001DE 0009                   NOP
    000001E0              L547:                             
    000001E0 DB0D                   MOV.L       L610+48,R11; _PineIni_Section_GetInt
    000001E2 DC0E                   MOV.L       L610+52,R12; _PineIni_Section_GetFloat
      LanternT.c   123            return 0;
      LanternT.c   124        }
      LanternT.c   125    
      LanternT.c   126        for (i = 0; i < iniResult->numSection; i++)
    000001E4 A070                   BRA         L549
    000001E6 1FE6                   MOV.L       R14,@(24,R15)
    000001E8              L610:                             
    000001E8 7904                   .DATA.W     H'7904
    000001EA 7910                   .DATA.W     H'7910
    000001EC 7534                   .DATA.W     H'7534
    000001EE 0000                   .DATA.W     0
    000001F0 <00000000>             .DATA.L     _PineIni_Parse
    000001F4 <00000000>             .DATA.L     _free
    000001F8 <00000000>             .DATA.L     _PopUpWin
    000001FC <00000000>             .DATA.L     _locate
    00000200 <00000000>             .DATA.L     L435
    00000204 <00000000>             .DATA.L     _Print
    00000208 <00000000>             .DATA.L     L438
    0000020C <00000000>             .DATA.L     _printf_pop_xy
    00000210 <00000000>             .DATA.L     L439
    00000214 <00000000>             .DATA.L     L391
    00000218 <00000000>             .DATA.L     _PineIni_Section_GetInt
    0000021C <00000000>             .DATA.L     _PineIni_Section_GetFloat
    00000220              L550:                             
      LanternT.c   127        {
      LanternT.c   128            Section = iniResult->sections[i];
    00000220 53F8                   MOV.L       @(32,R15),R3
    00000222 59F6                   MOV.L       @(24,R15),R9
      LanternT.c   129            if (strstr(Section->name, "tower"))
    00000224 D541                   MOV.L       L611+4,R5  ; L442
    00000226 4908                   SHLL2       R9
    00000228 D241                   MOV.L       L611+8,R2  ; _strstr
    0000022A 7304                   ADD         #4,R3
    0000022C 393C                   ADD         R3,R9
    0000022E 6992                   MOV.L       @R9,R9
    00000230 420B                   JSR         @R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 23-Mar-2023 23:11:43  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000232 6492                   MOV.L       @R9,R4
    00000234 2008                   TST         R0,R0
    00000236 8944                   BT          L551
      LanternT.c   130            {
      LanternT.c   131                Tower_DataBase[Tower_DbSize] = (LPTOWER)malloc(sizeof(Tower));
    00000238 52F9                   MOV.L       @(36,R15),R2
    0000023A 4208                   SHLL2       R2
    0000023C 9374                   MOV.W       L611,R3    ; H'1390
    0000023E 33FC                   ADD         R15,R3
    00000240 D13C                   MOV.L       L611+12,R1 ; _malloc
    00000242 323C                   ADD         R3,R2
    00000244 1F21                   MOV.L       R2,@(4,R15)
    00000246 2F26                   MOV.L       R2,@-R15
    00000248 410B                   JSR         @R1
    0000024A E41C                   MOV         #28,R4
    0000024C 63F6                   MOV.L       @R15+,R3
      LanternT.c   132                Tower_DataBase[Tower_DbSize]->id = PineIni_Section_GetInt(Section, "id", 0);
    0000024E E600                   MOV         #0,R6
    00000250 D539                   MOV.L       L611+16,R5 ; L444
    00000252 2302                   MOV.L       R0,@R3
    00000254 52F1                   MOV.L       @(4,R15),R2
    00000256 6322                   MOV.L       @R2,R3
    00000258 2F36                   MOV.L       R3,@-R15
    0000025A 4B0B                   JSR         @R11
    0000025C 6493                   MOV         R9,R4
      LanternT.c   133                Tower_DataBase[Tower_DbSize]->Tower_Level = PineIni_Section_GetInt(Section, "Tower_Level", 0);
    0000025E E600                   MOV         #0,R6
    00000260 D536                   MOV.L       L611+20,R5 ; L445
    00000262 62F6                   MOV.L       @R15+,R2
    00000264 2202                   MOV.L       R0,@R2
    00000266 53F1                   MOV.L       @(4,R15),R3
    00000268 6232                   MOV.L       @R3,R2
    0000026A E304                   MOV         #4,R3
    0000026C 332C                   ADD         R2,R3
    0000026E 2F36                   MOV.L       R3,@-R15
    00000270 4B0B                   JSR         @R11
    00000272 6493                   MOV         R9,R4
    00000274 61F6                   MOV.L       @R15+,R1
      LanternT.c   134                Tower_DataBase[Tower_DbSize]->Attack = PineIni_Section_GetFloat(Section, "Attack", 0);
    00000276 6493                   MOV         R9,R4
    00000278 D531                   MOV.L       L611+24,R5 ; L446
    0000027A 2102                   MOV.L       R0,@R1
    0000027C 53F1                   MOV.L       @(4,R15),R3
    0000027E E100                   MOV         #0,R1
    00000280 6232                   MOV.L       @R3,R2
    00000282 E308                   MOV         #8,R3
    00000284 2F16                   MOV.L       R1,@-R15
    00000286 332C                   ADD         R2,R3
    00000288 2F16                   MOV.L       R1,@-R15
    0000028A 4C0B                   JSR         @R12
    0000028C 2F36                   MOV.L       R3,@-R15
      LanternT.c   135                Tower_DataBase[Tower_DbSize]->Attack_Frequency = PineIni_Section_GetFloat(Section, "Attack_Fre
                         +quency", 0);
    0000028E E100                   MOV         #0,R1
    00000290 D52C                   MOV.L       L611+28,R5 ; L447
    00000292 6493                   MOV         R9,R4
    00000294 52F4                   MOV.L       @(16,R15),R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 23-Mar-2023 23:11:43  PAGE    9


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000296 6322                   MOV.L       @R2,R3
    00000298 2F16                   MOV.L       R1,@-R15
    0000029A E210                   MOV         #16,R2
    0000029C 2F16                   MOV.L       R1,@-R15
    0000029E 323C                   ADD         R3,R2
    000002A0 4C0B                   JSR         @R12
    000002A2 2F26                   MOV.L       R2,@-R15
      LanternT.c   136                Tower_DataBase[Tower_DbSize]->Attack_Range = PineIni_Section_GetInt(Section, "Attack_Range", 0
                         +);
    000002A4 D528                   MOV.L       L611+32,R5 ; L448
    000002A6 7F18                   ADD         #24,R15
    000002A8 53F1                   MOV.L       @(4,R15),R3
    000002AA E600                   MOV         #0,R6
    000002AC 6232                   MOV.L       @R3,R2
    000002AE E318                   MOV         #24,R3
    000002B0 332C                   ADD         R2,R3
    000002B2 2F36                   MOV.L       R3,@-R15
    000002B4 4B0B                   JSR         @R11
    000002B6 6493                   MOV         R9,R4
    000002B8 61F6                   MOV.L       @R15+,R1
    000002BA 2102                   MOV.L       R0,@R1
      LanternT.c   137                Tower_DbSize++;
    000002BC 53F9                   MOV.L       @(36,R15),R3
    000002BE 7301                   ADD         #1,R3
    000002C0 1F39                   MOV.L       R3,@(36,R15)
    000002C2              L551:                             
    000002C2 52F6                   MOV.L       @(24,R15),R2
    000002C4 7201                   ADD         #1,R2
    000002C6 1F26                   MOV.L       R2,@(24,R15)
    000002C8              L549:                             
    000002C8 53F8                   MOV.L       @(32,R15),R3
    000002CA 6232                   MOV.L       @R3,R2
    000002CC 51F6                   MOV.L       @(24,R15),R1
    000002CE 3122                   CMP/HS      R2,R1
    000002D0 8BA6                   BF          L550
      LanternT.c   138            }
      LanternT.c   139        }
      LanternT.c   140    
      LanternT.c   141        // MonsterDbRead
      LanternT.c   142        filehandle = read_text_file(&MonsterINIText, (char *)"\\\\crd0\\monster.txt");
    000002D2 64F3                   MOV         R15,R4
    000002D4 D21E                   MOV.L       L611+40,R2 ; _read_text_file
    000002D6 D51D                   MOV.L       L611+36,R5 ; L449
    000002D8 420B                   JSR         @R2
    000002DA 743C                   ADD         #60,R4
    000002DC 6403                   MOV         R0,R4
      LanternT.c   143    
      LanternT.c   144        if (filehandle <= 0)
    000002DE 4415                   CMP/PL      R4
    000002E0 8944                   BT          L552
      LanternT.c   145        {
      LanternT.c   146            PopUpWin(3);
    000002E2 D21C                   MOV.L       L611+44,R2 ; _PopUpWin
    000002E4 420B                   JSR         @R2
    000002E6 E403                   MOV         #3,R4
      LanternT.c   147            locate(5, 3);
    000002E8 D31B                   MOV.L       L611+48,R3 ; _locate




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 23-Mar-2023 23:11:43  PAGE   10


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000002EA E503                   MOV         #3,R5
    000002EC 430B                   JSR         @R3
    000002EE E405                   MOV         #5,R4
      LanternT.c   148            Print((unsigned char *)"Read DATABASE");
    000002F0 D41A                   MOV.L       L611+52,R4 ; L434
    000002F2 D21B                   MOV.L       L611+56,R2 ; _Print
    000002F4 420B                   JSR         @R2
    000002F6 0009                   NOP
      LanternT.c   149            locate(5, 4);
    000002F8 D317                   MOV.L       L611+48,R3 ; _locate
    000002FA E504                   MOV         #4,R5
    000002FC 430B                   JSR         @R3
    000002FE E405                   MOV         #5,R4
      LanternT.c   150            Print((unsigned char *)"ERROR");
    00000300 D418                   MOV.L       L611+60,R4 ; L435
    00000302 D217                   MOV.L       L611+56,R2 ; _Print
    00000304 420B                   JSR         @R2
    00000306 0009                   NOP
      LanternT.c   151            locate(5, 5);
    00000308 D313                   MOV.L       L611+48,R3 ; _locate
    0000030A E505                   MOV         #5,R5
    0000030C 430B                   JSR         @R3
    0000030E 6453                   MOV         R5,R4
      LanternT.c   152            Print((unsigned char *)"Press [EXE] key");
    00000310 D415                   MOV.L       L611+64,R4 ; L391
    00000312 D213                   MOV.L       L611+56,R2 ; _Print
    00000314 420B                   JSR         @R2
    00000316 0009                   NOP
      LanternT.c   153            do
    00000318              L553:                             
      LanternT.c   154            {
      LanternT.c   155                GetKey(&key);
    00000318 480B                   JSR         @R8
    0000031A 64F3                   MOV         R15,R4
      LanternT.c   156            } while (key != KEY_CTRL_EXE);
    0000031C 9305                   MOV.W       L611+2,R3  ; H'7534
    0000031E 62F2                   MOV.L       @R15,R2
    00000320 3230                   CMP/EQ      R3,R2
    00000322 8BF9                   BF          L553
    00000324 A05A                   BRA         L606
    00000326 0009                   NOP
    00000328              L611:                             
    00000328 1390                   .DATA.W     H'1390
    0000032A 7534                   .DATA.W     H'7534
    0000032C <00000000>             .DATA.L     L442
    00000330 <00000000>             .DATA.L     _strstr
    00000334 <00000000>             .DATA.L     _malloc
    00000338 <00000000>             .DATA.L     L444
    0000033C <00000000>             .DATA.L     L445
    00000340 <00000000>             .DATA.L     L446
    00000344 <00000000>             .DATA.L     L447
    00000348 <00000000>             .DATA.L     L448
    0000034C <00000000>             .DATA.L     L449
    00000350 <00000000>             .DATA.L     _read_text_file
    00000354 <00000000>             .DATA.L     _PopUpWin
    00000358 <00000000>             .DATA.L     _locate
    0000035C <00000000>             .DATA.L     L434




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 23-Mar-2023 23:11:43  PAGE   11


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000360 <00000000>             .DATA.L     _Print
    00000364 <00000000>             .DATA.L     L435
    00000368 <00000000>             .DATA.L     L391
    0000036C              L552:                             
      LanternT.c   157            return 0;
      LanternT.c   158        }
      LanternT.c   159    
      LanternT.c   160        iniResult = PineIni_Parse(MonsterINIText, &errorRet);
    0000036C 953A                   MOV.W       L612,R5    ; H'7904
    0000036E 35FC                   ADD         R15,R5
    00000370 D31E                   MOV.L       L612+8,R3  ; _PineIni_Parse
    00000372 430B                   JSR         @R3
    00000374 54FF                   MOV.L       @(60,R15),R4
    00000376 1F08                   MOV.L       R0,@(32,R15)
      LanternT.c   161        free(MonsterINIText);
    00000378 D31D                   MOV.L       L612+12,R3 ; _free
    0000037A 430B                   JSR         @R3
    0000037C 54FF                   MOV.L       @(60,R15),R4
      LanternT.c   162    
      LanternT.c   163        if (iniResult == NULL)
    0000037E 52F8                   MOV.L       @(32,R15),R2
    00000380 2228                   TST         R2,R2
    00000382 8B2D                   BF          L554
      LanternT.c   164        {
      LanternT.c   165            PopUpWin(5);
    00000384 D31B                   MOV.L       L612+16,R3 ; _PopUpWin
    00000386 430B                   JSR         @R3
    00000388 E405                   MOV         #5,R4
      LanternT.c   166            locate(9, 2);
    0000038A E502                   MOV         #2,R5
    0000038C D21A                   MOV.L       L612+20,R2 ; _locate
    0000038E 420B                   JSR         @R2
    00000390 E409                   MOV         #9,R4
      LanternT.c   167            Print((unsigned char *)"ERROR");
    00000392 D41A                   MOV.L       L612+24,R4 ; L435
    00000394 D31A                   MOV.L       L612+28,R3 ; _Print
    00000396 430B                   JSR         @R3
    00000398 0009                   NOP
      LanternT.c   168            printf_pop_xy(5, 3, "Error Code:%d", errorRet.errorCode);
    0000039A E503                   MOV         #3,R5
    0000039C 9022                   MOV.W       L612,R0    ; H'7904
    0000039E 02FE                   MOV.L       @(R0,R15),R2
    000003A0 D318                   MOV.L       L612+32,R3 ; L438
    000003A2 2F26                   MOV.L       R2,@-R15
    000003A4 2F36                   MOV.L       R3,@-R15
    000003A6 D218                   MOV.L       L612+36,R2 ; _printf_pop_xy
    000003A8 420B                   JSR         @R2
    000003AA E405                   MOV         #5,R4
      LanternT.c   169            printf_pop_xy(5, 4, "Line Number:%d", errorRet.lineNumber);
    000003AC 901B                   MOV.W       L612+2,R0  ; H'7910
    000003AE E504                   MOV         #4,R5
    000003B0 D216                   MOV.L       L612+40,R2 ; L439
    000003B2 03FE                   MOV.L       @(R0,R15),R3
    000003B4 2F36                   MOV.L       R3,@-R15
    000003B6 2F26                   MOV.L       R2,@-R15
    000003B8 D313                   MOV.L       L612+36,R3 ; _printf_pop_xy
    000003BA 430B                   JSR         @R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 23-Mar-2023 23:11:43  PAGE   12


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000003BC E405                   MOV         #5,R4
    000003BE 7F10                   ADD         #16,R15
      LanternT.c   170            locate(5, 5);
    000003C0 D20D                   MOV.L       L612+20,R2 ; _locate
    000003C2 E505                   MOV         #5,R5
    000003C4 420B                   JSR         @R2
    000003C6 6453                   MOV         R5,R4
      LanternT.c   171            Print((unsigned char *)"Press [EXE] key");
    000003C8 D411                   MOV.L       L612+44,R4 ; L391
    000003CA D30D                   MOV.L       L612+28,R3 ; _Print
    000003CC 430B                   JSR         @R3
    000003CE 0009                   NOP
      LanternT.c   172            do
    000003D0              L555:                             
      LanternT.c   173            {
      LanternT.c   174                GetKey(&key);
    000003D0 480B                   JSR         @R8
    000003D2 64F3                   MOV         R15,R4
      LanternT.c   175            } while (key != KEY_CTRL_EXE);
    000003D4 9208                   MOV.W       L612+4,R2  ; H'7534
    000003D6 63F2                   MOV.L       @R15,R3
    000003D8 3320                   CMP/EQ      R2,R3
    000003DA 8BF9                   BF          L555
    000003DC              L606:                             
      LanternT.c   176            return 0;
    000003DC A2E7                   BRA         L546
    000003DE E000                   MOV         #0,R0
    000003E0              L554:                             
      LanternT.c   177        }
      LanternT.c   178        for (i = 0; i < iniResult->numSection; i++)
    000003E0 A098                   BRA         L556
    000003E2 1FE6                   MOV.L       R14,@(24,R15)
    000003E4              L612:                             
    000003E4 7904                   .DATA.W     H'7904
    000003E6 7910                   .DATA.W     H'7910
    000003E8 7534                   .DATA.W     H'7534
    000003EA 0000                   .DATA.W     0
    000003EC <00000000>             .DATA.L     _PineIni_Parse
    000003F0 <00000000>             .DATA.L     _free
    000003F4 <00000000>             .DATA.L     _PopUpWin
    000003F8 <00000000>             .DATA.L     _locate
    000003FC <00000000>             .DATA.L     L435
    00000400 <00000000>             .DATA.L     _Print
    00000404 <00000000>             .DATA.L     L438
    00000408 <00000000>             .DATA.L     _printf_pop_xy
    0000040C <00000000>             .DATA.L     L439
    00000410 <00000000>             .DATA.L     L391
    00000414              L557:                             
      LanternT.c   179        {
      LanternT.c   180            Section = iniResult->sections[i];
    00000414 53F8                   MOV.L       @(32,R15),R3
    00000416 59F6                   MOV.L       @(24,R15),R9
      LanternT.c   181            if (strstr(Section->name, "monster"))
    00000418 D552                   MOV.L       L613+8,R5  ; L455
    0000041A 4908                   SHLL2       R9
    0000041C D252                   MOV.L       L613+12,R2 ; _strstr
    0000041E 7304                   ADD         #4,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 23-Mar-2023 23:11:43  PAGE   13


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000420 393C                   ADD         R3,R9
    00000422 6992                   MOV.L       @R9,R9
    00000424 420B                   JSR         @R2
    00000426 6492                   MOV.L       @R9,R4
    00000428 2008                   TST         R0,R0
    0000042A 8970                   BT          L558
      LanternT.c   182            {
      LanternT.c   183                Monster_DataBase[Monster_DbSize] = (LPMONSTER)malloc(sizeof(Monster));
    0000042C 52FE                   MOV.L       @(56,R15),R2
    0000042E 4208                   SHLL2       R2
    00000430 9394                   MOV.W       L613,R3    ; H'01EC
    00000432 33FC                   ADD         R15,R3
    00000434 D14D                   MOV.L       L613+16,R1 ; _malloc
    00000436 323C                   ADD         R3,R2
    00000438 1F21                   MOV.L       R2,@(4,R15)
    0000043A 2F26                   MOV.L       R2,@-R15
    0000043C 410B                   JSR         @R1
    0000043E E43C                   MOV         #60,R4
    00000440 63F6                   MOV.L       @R15+,R3
      LanternT.c   184                Monster_DataBase[Monster_DbSize]->id = PineIni_Section_GetInt(Section, "id", 0);
    00000442 E600                   MOV         #0,R6
    00000444 D54A                   MOV.L       L613+20,R5 ; L444
    00000446 2302                   MOV.L       R0,@R3
    00000448 52F1                   MOV.L       @(4,R15),R2
    0000044A 6322                   MOV.L       @R2,R3
    0000044C 2F36                   MOV.L       R3,@-R15
    0000044E 4B0B                   JSR         @R11
    00000450 6493                   MOV         R9,R4
      LanternT.c   185                Monster_DataBase[Monster_DbSize]->Monster_Level = PineIni_Section_GetInt(Section, "Monster_Lev
                         +el", 0);
    00000452 E600                   MOV         #0,R6
    00000454 D547                   MOV.L       L613+24,R5 ; L457
    00000456 62F6                   MOV.L       @R15+,R2
    00000458 2202                   MOV.L       R0,@R2
    0000045A 53F1                   MOV.L       @(4,R15),R3
    0000045C 6232                   MOV.L       @R3,R2
    0000045E E304                   MOV         #4,R3
    00000460 332C                   ADD         R2,R3
    00000462 2F36                   MOV.L       R3,@-R15
    00000464 4B0B                   JSR         @R11
    00000466 6493                   MOV         R9,R4
    00000468 61F6                   MOV.L       @R15+,R1
      LanternT.c   186                Monster_DataBase[Monster_DbSize]->health = PineIni_Section_GetFloat(Section, "health", 0);
    0000046A 6493                   MOV         R9,R4
    0000046C D542                   MOV.L       L613+28,R5 ; L458
    0000046E 2102                   MOV.L       R0,@R1
    00000470 53F1                   MOV.L       @(4,R15),R3
    00000472 E100                   MOV         #0,R1
    00000474 6232                   MOV.L       @R3,R2
    00000476 E308                   MOV         #8,R3
    00000478 2F16                   MOV.L       R1,@-R15
    0000047A 332C                   ADD         R2,R3
    0000047C 2F16                   MOV.L       R1,@-R15
    0000047E 4C0B                   JSR         @R12
    00000480 2F36                   MOV.L       R3,@-R15
      LanternT.c   187                Monster_DataBase[Monster_DbSize]->damage = PineIni_Section_GetFloat(Section, "damage", 0);
    00000482 E100                   MOV         #0,R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 23-Mar-2023 23:11:43  PAGE   14


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000484 D53D                   MOV.L       L613+32,R5 ; L459
    00000486 6493                   MOV         R9,R4
    00000488 52F4                   MOV.L       @(16,R15),R2
    0000048A 6322                   MOV.L       @R2,R3
    0000048C 2F16                   MOV.L       R1,@-R15
    0000048E E210                   MOV         #16,R2
    00000490 2F16                   MOV.L       R1,@-R15
    00000492 323C                   ADD         R3,R2
    00000494 4C0B                   JSR         @R12
    00000496 2F26                   MOV.L       R2,@-R15
      LanternT.c   188                Monster_DataBase[Monster_DbSize]->attack = PineIni_Section_GetFloat(Section, "attack", 0);
    00000498 53F7                   MOV.L       @(28,R15),R3
    0000049A E100                   MOV         #0,R1
    0000049C D538                   MOV.L       L613+36,R5 ; L460
    0000049E 6493                   MOV         R9,R4
    000004A0 6232                   MOV.L       @R3,R2
    000004A2 E318                   MOV         #24,R3
    000004A4 2F16                   MOV.L       R1,@-R15
    000004A6 332C                   ADD         R2,R3
    000004A8 2F16                   MOV.L       R1,@-R15
    000004AA 4C0B                   JSR         @R12
    000004AC 2F36                   MOV.L       R3,@-R15
      LanternT.c   189                Monster_DataBase[Monster_DbSize]->Speed = PineIni_Section_GetFloat(Section, "Speed", 0);
    000004AE E100                   MOV         #0,R1
    000004B0 D534                   MOV.L       L613+40,R5 ; L461
    000004B2 6493                   MOV         R9,R4
    000004B4 52FA                   MOV.L       @(40,R15),R2
    000004B6 6322                   MOV.L       @R2,R3
    000004B8 2F16                   MOV.L       R1,@-R15
    000004BA E220                   MOV         #32,R2
    000004BC 2F16                   MOV.L       R1,@-R15
    000004BE 323C                   ADD         R3,R2
    000004C0 4C0B                   JSR         @R12
    000004C2 2F26                   MOV.L       R2,@-R15
      LanternT.c   190                Monster_DataBase[Monster_DbSize]->armor = PineIni_Section_GetFloat(Section, "armor", 0);
    000004C4 53FD                   MOV.L       @(52,R15),R3
    000004C6 E100                   MOV         #0,R1
    000004C8 D52F                   MOV.L       L613+44,R5 ; L462
    000004CA 6493                   MOV         R9,R4
    000004CC 6232                   MOV.L       @R3,R2
    000004CE E328                   MOV         #40,R3
    000004D0 2F16                   MOV.L       R1,@-R15
    000004D2 332C                   ADD         R2,R3
    000004D4 2F16                   MOV.L       R1,@-R15
    000004D6 4C0B                   JSR         @R12
    000004D8 2F36                   MOV.L       R3,@-R15
    000004DA 7F3C                   ADD         #60,R15
      LanternT.c   191                Monster_DataBase[Monster_DbSize]->buff = PineIni_Section_GetInt(Section, "buff", 0);
    000004DC D52B                   MOV.L       L613+48,R5 ; L463
    000004DE E600                   MOV         #0,R6
    000004E0 52F1                   MOV.L       @(4,R15),R2
    000004E2 6322                   MOV.L       @R2,R3
    000004E4 E234                   MOV         #52,R2
    000004E6 323C                   ADD         R3,R2
    000004E8 2F26                   MOV.L       R2,@-R15
    000004EA 4B0B                   JSR         @R11
    000004EC 6493                   MOV         R9,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 23-Mar-2023 23:11:43  PAGE   15


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      LanternT.c   192                Monster_DataBase[Monster_DbSize]->debuff = PineIni_Section_GetInt(Section, "debuff", 0);
    000004EE E600                   MOV         #0,R6
    000004F0 D527                   MOV.L       L613+52,R5 ; L464
    000004F2 61F6                   MOV.L       @R15+,R1
    000004F4 2102                   MOV.L       R0,@R1
    000004F6 53F1                   MOV.L       @(4,R15),R3
    000004F8 6232                   MOV.L       @R3,R2
    000004FA E338                   MOV         #56,R3
    000004FC 332C                   ADD         R2,R3
    000004FE 2F36                   MOV.L       R3,@-R15
    00000500 4B0B                   JSR         @R11
    00000502 6493                   MOV         R9,R4
    00000504 61F6                   MOV.L       @R15+,R1
    00000506 2102                   MOV.L       R0,@R1
      LanternT.c   193                Monster_DbSize++;
    00000508 53FE                   MOV.L       @(56,R15),R3
    0000050A 7301                   ADD         #1,R3
    0000050C 1F3E                   MOV.L       R3,@(56,R15)
    0000050E              L558:                             
    0000050E 52F6                   MOV.L       @(24,R15),R2
    00000510 7201                   ADD         #1,R2
    00000512 1F26                   MOV.L       R2,@(24,R15)
    00000514              L556:                             
    00000514 53F8                   MOV.L       @(32,R15),R3
    00000516 6232                   MOV.L       @R3,R2
    00000518 51F6                   MOV.L       @(24,R15),R1
    0000051A 3122                   CMP/HS      R2,R1
    0000051C 8901                   BT          L614
    0000051E AF79                   BRA         L557
    00000520 0009                   NOP
    00000522              L614:                             
      LanternT.c   194            }
      LanternT.c   195        }
      LanternT.c   196    
      LanternT.c   197        for (i = 0; i < 37; i++)
    00000522 66E3                   MOV         R14,R6
    00000524 9C1B                   MOV.W       L613+2,R12 ; H'6390
    00000526 E525                   MOV         #37,R5
    00000528 A03B                   BRA         L559
    0000052A 3CFC                   ADD         R15,R12
    0000052C              L560:                             
    0000052C 9B18                   MOV.W       L613+4,R11 ; H'0094
      LanternT.c   198        {
      LanternT.c   199            for (j = 0; j < 37; j++)
    0000052E 64E3                   MOV         R14,R4
    00000530 06B7                   MUL.L       R11,R6
    00000532 0B1A                   STS         MACL,R11
    00000534 A032                   BRA         L561
    00000536 3BCC                   ADD         R12,R11
    00000538              L562:                             
    00000538 6743                   MOV         R4,R7
    0000053A 6263                   MOV         R6,R2
    0000053C 22D8                   TST         R13,R2
    0000053E 8F06                   BF/S        L563
    00000540 27D9                   AND         R13,R7
      LanternT.c   200            {
      LanternT.c   201                if (i % 2 == 0)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 23-Mar-2023 23:11:43  PAGE   16


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      LanternT.c   202                {
      LanternT.c   203                    if (j % 2 == 0)
    00000542 2778                   TST         R7,R7
    00000544 8906                   BT          L607
      LanternT.c   204                    {
      LanternT.c   205                        Maps[i][j] = 1;
      LanternT.c   206                    }
      LanternT.c   207                    else
      LanternT.c   208                    {
      LanternT.c   209                        Maps[i][j] = 0;
    00000546 6043                   MOV         R4,R0
    00000548 4008                   SHLL2       R0
    0000054A A026                   BRA         L566
    0000054C 0BE6                   MOV.L       R14,@(R0,R11)
    0000054E              L563:                             
      LanternT.c   210                    }
      LanternT.c   211                }
      LanternT.c   212                else
      LanternT.c   213                {
      LanternT.c   214                    if (j % 2 == 1)
    0000054E 6073                   MOV         R7,R0
    00000550 8801                   CMP/EQ      #1,R0
    00000552 8B1F                   BF          L567
    00000554              L607:                             
      LanternT.c   215                    {
      LanternT.c   216                        Maps[i][j] = 1;
    00000554 6043                   MOV         R4,R0
    00000556 4008                   SHLL2       R0
    00000558 A01F                   BRA         L566
    0000055A 0BD6                   MOV.L       R13,@(R0,R11)
    0000055C              L613:                             
    0000055C 01EC                   .DATA.W     H'01EC
    0000055E 6390                   .DATA.W     H'6390
    00000560 0094                   .DATA.W     H'0094
    00000562 0000                   .DATA.W     0
    00000564 <00000000>             .DATA.L     L455
    00000568 <00000000>             .DATA.L     _strstr
    0000056C <00000000>             .DATA.L     _malloc
    00000570 <00000000>             .DATA.L     L444
    00000574 <00000000>             .DATA.L     L457
    00000578 <00000000>             .DATA.L     L458
    0000057C <00000000>             .DATA.L     L459
    00000580 <00000000>             .DATA.L     L460
    00000584 <00000000>             .DATA.L     L461
    00000588 <00000000>             .DATA.L     L462
    0000058C <00000000>             .DATA.L     L463
    00000590 <00000000>             .DATA.L     L464
    00000594              L567:                             
      LanternT.c   217                    }
      LanternT.c   218                    else
      LanternT.c   219                    {
      LanternT.c   220                        Maps[i][j] = 0;
    00000594 6043                   MOV         R4,R0
    00000596 4008                   SHLL2       R0
    00000598 0BE6                   MOV.L       R14,@(R0,R11)
    0000059A              L566:                             
    0000059A 7401                   ADD         #1,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 23-Mar-2023 23:11:43  PAGE   17


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000059C              L561:                             
    0000059C 3452                   CMP/HS      R5,R4
    0000059E 8BCB                   BF          L562
    000005A0 7601                   ADD         #1,R6
    000005A2              L559:                             
    000005A2 3652                   CMP/HS      R5,R6
    000005A4 8BC2                   BF          L560
      LanternT.c   221                    }
      LanternT.c   222                }
      LanternT.c   223            }
      LanternT.c   224        }
      LanternT.c   225    
      LanternT.c   226        for (i = 0; i < 37; i++)
    000005A6 66E3                   MOV         R14,R6
    000005A8 E931                   MOV         #49,R9
    000005AA A022                   BRA         L569
    000005AC E708                   MOV         #8,R7
    000005AE              L570:                             
      LanternT.c   227        {
      LanternT.c   228            for (j = 0; j < 37; j++)
    000005AE 64E3                   MOV         R14,R4
    000005B0 9B03                   MOV.W       L615,R11   ; H'0094
    000005B2 06B7                   MUL.L       R11,R6
    000005B4 0B1A                   STS         MACL,R11
    000005B6 A019                   BRA         L571
    000005B8 3BCC                   ADD         R12,R11
    000005BA              L615:                             
    000005BA 0094                   .DATA.W     H'0094
    000005BC              L572:                             
    000005BC 6243                   MOV         R4,R2
    000005BE 4208                   SHLL2       R2
    000005C0 1F21                   MOV.L       R2,@(4,R15)
    000005C2 6043                   MOV         R4,R0
    000005C4 8812                   CMP/EQ      #18,R0
    000005C6 8B06                   BF          L573
      LanternT.c   229            {
      LanternT.c   230                if (j == 18)
      LanternT.c   231                {
      LanternT.c   232                    if (i <= 8 || i >= 28)
    000005C8 3676                   CMP/HI      R7,R6
    000005CA 8B02                   BF          L575
    000005CC E31C                   MOV         #28,R3
    000005CE 3632                   CMP/HS      R3,R6
    000005D0 8B01                   BF          L573
    000005D2              L575:                             
      LanternT.c   233                    {
      LanternT.c   234                        Maps[i][j] = 49;
    000005D2 50F1                   MOV.L       @(4,R15),R0
    000005D4 0B96                   MOV.L       R9,@(R0,R11)
    000005D6              L573:                             
      LanternT.c   235                    }
      LanternT.c   236                }
      LanternT.c   237                if (i == 18)
    000005D6 6063                   MOV         R6,R0
    000005D8 8812                   CMP/EQ      #18,R0
    000005DA 8B06                   BF          L576
      LanternT.c   238                {




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 23-Mar-2023 23:11:43  PAGE   18


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      LanternT.c   239                    if (j <= 8 || j >= 28)
    000005DC 3476                   CMP/HI      R7,R4
    000005DE 8B02                   BF          L578
    000005E0 E31C                   MOV         #28,R3
    000005E2 3432                   CMP/HS      R3,R4
    000005E4 8B01                   BF          L576
    000005E6              L578:                             
      LanternT.c   240                    {
      LanternT.c   241                        Maps[i][j] = 49;
    000005E6 50F1                   MOV.L       @(4,R15),R0
    000005E8 0B96                   MOV.L       R9,@(R0,R11)
    000005EA              L576:                             
    000005EA 7401                   ADD         #1,R4
    000005EC              L571:                             
    000005EC 3452                   CMP/HS      R5,R4
    000005EE 8BE5                   BF          L572
    000005F0 7601                   ADD         #1,R6
    000005F2              L569:                             
    000005F2 3652                   CMP/HS      R5,R6
    000005F4 8BDB                   BF          L570
      LanternT.c   242                    }
      LanternT.c   243                }
      LanternT.c   244            }
      LanternT.c   245        }
      LanternT.c   246        Maps[2][4] = 2;
    000005F6 64C3                   MOV         R12,R4
    000005F8 9069                   MOV.W       L616,R0    ; H'0138
    000005FA E302                   MOV         #2,R3
      LanternT.c   247        Maps[32][34] = 3;
    000005FC 9668                   MOV.W       L616+2,R6  ; H'1280
    000005FE E203                   MOV         #3,R2
      LanternT.c   248        Maps[18][4] = 4;
    00000600 9568                   MOV.W       L616+6,R5  ; H'0A68
    00000602 364C                   ADD         R4,R6
    00000604 0C36                   MOV.L       R3,@(R0,R12)
    00000606 354C                   ADD         R4,R5
    00000608 9063                   MOV.W       L616+4,R0  ; H'0088
    0000060A E304                   MOV         #4,R3
    0000060C 0626                   MOV.L       R2,@(R0,R6)
      LanternT.c   249        Maps[18][32] = 5;
    0000060E 70F8                   ADD         #-8,R0
    00000610 1534                   MOV.L       R3,@(16,R5)
    00000612 E205                   MOV         #5,R2
    00000614 0526                   MOV.L       R2,@(R0,R5)
      LanternT.c   250        Maps[4][32] = 6;
    00000616 E306                   MOV         #6,R3
    00000618 955D                   MOV.W       L616+8,R5  ; H'0250
      LanternT.c   251        Maps[4][18] = 7;
    0000061A E207                   MOV         #7,R2
    0000061C 354C                   ADD         R4,R5
      LanternT.c   252        Maps[32][18] = 8;
    0000061E 7648                   ADD         #72,R6
    00000620 0536                   MOV.L       R3,@(R0,R5)
    00000622 7548                   ADD         #72,R5
      LanternT.c   253    
      LanternT.c   254        // test astar
      LanternT.c   255        // Astar(2, 4, 4, 18, 37, (int *)Maps, OpenList, CloseList, Direction, &numOFDirection);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 23-Mar-2023 23:11:43  PAGE   19


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      LanternT.c   256        // for (i = 0; i < numOFDirection; i++)
      LanternT.c   257        // {
      LanternT.c   258        //     switch (Direction[i])
      LanternT.c   259        //     {
      LanternT.c   260        //     case 1:
      LanternT.c   261        //         printf_pop_xy(1 + ((i % 10) * 2), 1 + i / 10, "U,");
      LanternT.c   262        //         break;
      LanternT.c   263        //     case 2:
      LanternT.c   264        //         printf_pop_xy(1 + ((i % 10) * 2), 1 + i / 10, "D,");
      LanternT.c   265        //         break;
      LanternT.c   266        //     case 3:
      LanternT.c   267        //         printf_pop_xy(1 + ((i % 10) * 2), 1 + i / 10, "L,");
      LanternT.c   268        //         break;
      LanternT.c   269        //     case 4:
      LanternT.c   270        //         printf_pop_xy(1 + ((i % 10) * 2), 1 + i / 10, "R,");
      LanternT.c   271        //         break;
      LanternT.c   272        //     }
      LanternT.c   273        // }
      LanternT.c   274    
      LanternT.c   275        // do
      LanternT.c   276        // {
      LanternT.c   277        //     GetKey(&key);
      LanternT.c   278        // } while (key != KEY_CHAR_0);
      LanternT.c   279    
      LanternT.c   280        EnterGame();
    00000624 D32E                   MOV.L       L616+18,R3 ; _EnterGame
    00000626 2522                   MOV.L       R2,@R5
    00000628 430B                   JSR         @R3
    0000062A 2672                   MOV.L       R7,@R6
      LanternT.c   281    
      LanternT.c   282        do
    0000062C              L579:                             
      LanternT.c   283        {
      LanternT.c   284            GetKey(&key);
    0000062C 480B                   JSR         @R8
    0000062E 64F3                   MOV         R15,R4
      LanternT.c   285        } while (key != KEY_CTRL_EXE);
    00000630 9252                   MOV.W       L616+10,R2 ; H'7534
    00000632 63F2                   MOV.L       @R15,R3
    00000634 3320                   CMP/EQ      R2,R3
    00000636 8BF9                   BF          L579
      LanternT.c   286        PopUpWin(3);
    00000638 D32A                   MOV.L       L616+22,R3 ; _PopUpWin
    0000063A 430B                   JSR         @R3
    0000063C E403                   MOV         #3,R4
      LanternT.c   287        locate(7, 3);
    0000063E E503                   MOV         #3,R5
    00000640 D229                   MOV.L       L616+26,R2 ; _locate
    00000642 420B                   JSR         @R2
    00000644 E407                   MOV         #7,R4
      LanternT.c   288        Print((unsigned char *)"START GAME");
    00000646 D429                   MOV.L       L616+30,R4 ; L480
    00000648 D329                   MOV.L       L616+34,R3 ; _Print
    0000064A 430B                   JSR         @R3
    0000064C 0009                   NOP
      LanternT.c   289        locate(5, 5);
    0000064E E505                   MOV         #5,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 23-Mar-2023 23:11:43  PAGE   20


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000650 D225                   MOV.L       L616+26,R2 ; _locate
    00000652 420B                   JSR         @R2
    00000654 6453                   MOV         R5,R4
      LanternT.c   290        Print((unsigned char *)"Press [0] key");
    00000656 D427                   MOV.L       L616+38,R4 ; L481
    00000658 D325                   MOV.L       L616+34,R3 ; _Print
    0000065A 430B                   JSR         @R3
    0000065C 0009                   NOP
      LanternT.c   291        do
    0000065E              L580:                             
      LanternT.c   292        {
      LanternT.c   293            GetKey(&key);
    0000065E 480B                   JSR         @R8
    00000660 64F3                   MOV         R15,R4
      LanternT.c   294        } while (key != KEY_CHAR_0);
    00000662 60F2                   MOV.L       @R15,R0
    00000664 8830                   CMP/EQ      #48,R0
    00000666 8BFA                   BF          L580
    00000668 6BF3                   MOV         R15,R11
    0000066A 7B5C                   ADD         #92,R11
      LanternT.c   295        while (1)
    0000066C              L582:                             
      LanternT.c   296        {
      LanternT.c   297            if (!IsGameOver)
    0000066C E044                   MOV         #68,R0
    0000066E 03FE                   MOV.L       @(R0,R15),R3
    00000670 2338                   TST         R3,R3
    00000672 8901                   BT          L617
    00000674 A18E                   BRA         L603
    00000676 0009                   NOP
    00000678              L617:                             
      LanternT.c   298            {
      LanternT.c   299                key = 0;
    00000678 2FE2                   MOV.L       R14,@R15
      LanternT.c   300                if (IsPlace)
    0000067A E048                   MOV         #72,R0
    0000067C 03FE                   MOV.L       @(R0,R15),R3
    0000067E 2338                   TST         R3,R3
    00000680 8B01                   BF          L618
    00000682 A08A                   BRA         L591
    00000684 0009                   NOP
    00000686              L618:                             
      LanternT.c   301                {
      LanternT.c   302                    Bdisp_AllClr_DDVRAM();
    00000686 D31C                   MOV.L       L616+42,R3 ; _Bdisp_AllClr_DDVRAM
    00000688 430B                   JSR         @R3
    0000068A 0009                   NOP
      LanternT.c   303                    printf_xy(42, 25, 0, "Round:%d", round);
    0000068C 52FC                   MOV.L       @(48,R15),R2
    0000068E E600                   MOV         #0,R6
    00000690 D31A                   MOV.L       L616+46,R3 ; L486
    00000692 E519                   MOV         #25,R5
    00000694 2F26                   MOV.L       R2,@-R15
    00000696 2F36                   MOV.L       R3,@-R15
    00000698 D219                   MOV.L       L616+50,R2 ; _printf_xy
    0000069A 420B                   JSR         @R2
    0000069C E42A                   MOV         #42,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 23-Mar-2023 23:11:43  PAGE   21


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      LanternT.c   304                    Sleep(1000);
    0000069E 941C                   MOV.W       L616+12,R4 ; H'03E8
    000006A0 D318                   MOV.L       L616+54,R3 ; _Sleep
    000006A2 430B                   JSR         @R3
    000006A4 7F08                   ADD         #8,R15
      LanternT.c   305    
      LanternT.c   306                    while (1)
    000006A6              L586:                             
      LanternT.c   307                    {
      LanternT.c   308                        // Bdisp_AllClr_DDVRAM();
      LanternT.c   309                        Bdisp_AllClr_VRAM();
    000006A6 D318                   MOV.L       L616+58,R3 ; _Bdisp_AllClr_VRAM
    000006A8 430B                   JSR         @R3
    000006AA 0009                   NOP
      LanternT.c   310                        Tower_Place(key, Cursor_Position, Current_Screen, Maps, Tower_DataBase, Tower_DbSize, 
                         +Tower_PlaceTower, Tower_Buffer, &numOfPlace, &numOfCurrent, Direction, &numOfDirection, &IsPlaceOver);
    000006AC 62F3                   MOV         R15,R2
    000006AE 721C                   ADD         #28,R2
    000006B0 2F26                   MOV.L       R2,@-R15
    000006B2 63F3                   MOV         R15,R3
    000006B4 9212                   MOV.W       L616+14,R2 ; H'2398
    000006B6 7330                   ADD         #48,R3
    000006B8 2F36                   MOV.L       R3,@-R15
    000006BA 32FC                   ADD         R15,R2
    000006BC 2F26                   MOV.L       R2,@-R15
    000006BE 63F3                   MOV         R15,R3
    000006C0 7340                   ADD         #64,R3
    000006C2 2F36                   MOV.L       R3,@-R15
    000006C4 62F3                   MOV         R15,R2
    000006C6 7224                   ADD         #36,R2
    000006C8 2F26                   MOV.L       R2,@-R15
    000006CA A01F                   BRA         L608
    000006CC 0009                   NOP
    000006CE              L616:                             
    000006CE 0138                   .DATA.W     H'0138
    000006D0 1280                   .DATA.W     H'1280
    000006D2 0088                   .DATA.W     H'0088
    000006D4 0A68                   .DATA.W     H'0A68
    000006D6 0250                   .DATA.W     H'0250
    000006D8 7534                   .DATA.W     H'7534
    000006DA 03E8                   .DATA.W     H'03E8
    000006DC 2398                   .DATA.W     H'2398
    000006DE 0000                   .DATA.W     0
    000006E0 <00000000>             .DATA.L     _EnterGame
    000006E4 <00000000>             .DATA.L     _PopUpWin
    000006E8 <00000000>             .DATA.L     _locate
    000006EC <00000000>             .DATA.L     L480
    000006F0 <00000000>             .DATA.L     _Print
    000006F4 <00000000>             .DATA.L     L481
    000006F8 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    000006FC <00000000>             .DATA.L     L486
    00000700 <00000000>             .DATA.L     _printf_xy
    00000704 <00000000>             .DATA.L     _Sleep
    00000708 <00000000>             .DATA.L     _Bdisp_AllClr_VRAM
    0000070C              L608:                             
    0000070C 9378                   MOV.W       L619,R3    ; H'0390
    0000070E E040                   MOV         #64,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 23-Mar-2023 23:11:43  PAGE   22


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000710 9277                   MOV.W       L619+2,R2  ; H'03A8
    00000712 67C3                   MOV         R12,R7
    00000714 33FC                   ADD         R15,R3
    00000716 66A3                   MOV         R10,R6
    00000718 2F36                   MOV.L       R3,@-R15
    0000071A 32FC                   ADD         R15,R2
    0000071C 2F26                   MOV.L       R2,@-R15
    0000071E 03FE                   MOV.L       @(R0,R15),R3
    00000720 9270                   MOV.W       L619+4,R2  ; H'13B0
    00000722 2F36                   MOV.L       R3,@-R15
    00000724 D33A                   MOV.L       L619+16,R3 ; _Tower_Place
    00000726 32FC                   ADD         R15,R2
    00000728 2F26                   MOV.L       R2,@-R15
    0000072A 59FD                   MOV.L       @(52,R15),R9
    0000072C 6593                   MOV         R9,R5
    0000072E 430B                   JSR         @R3
    00000730 54F9                   MOV.L       @(36,R15),R4
    00000732 7F24                   ADD         #36,R15
      LanternT.c   311                        Cursor_Move(key, Cursor_Position, Current_Screen);
    00000734 D337                   MOV.L       L619+20,R3 ; _Cursor_Move
    00000736 66A3                   MOV         R10,R6
    00000738 6593                   MOV         R9,R5
    0000073A 430B                   JSR         @R3
    0000073C 64F2                   MOV.L       @R15,R4
      LanternT.c   312                        Map_Initialization(Maps, Current_Screen, Cursor_Position, numOfCurrent);
    0000073E 6693                   MOV         R9,R6
    00000740 D335                   MOV.L       L619+24,R3 ; _Map_Initialization
    00000742 65A3                   MOV         R10,R5
    00000744 57FD                   MOV.L       @(52,R15),R7
    00000746 430B                   JSR         @R3
    00000748 64C3                   MOV         R12,R4
      LanternT.c   313                        Bdisp_PutDisp_DD();
    0000074A D234                   MOV.L       L619+28,R2 ; _Bdisp_PutDisp_DD
    0000074C 420B                   JSR         @R2
    0000074E 0009                   NOP
      LanternT.c   314                        if (numOfPlace > 0 && IsPlaceOver)
    00000750 53F5                   MOV.L       @(20,R15),R3
    00000752 4315                   CMP/PL      R3
    00000754 8B05                   BF          L587
    00000756 51F7                   MOV.L       @(28,R15),R1
    00000758 2118                   TST         R1,R1
    0000075A 8902                   BT          L587
      LanternT.c   315                        {
      LanternT.c   316                            IsPlace = 0;
    0000075C E048                   MOV         #72,R0
      LanternT.c   317                            break;
    0000075E AF85                   BRA         L582
    00000760 0FE6                   MOV.L       R14,@(R0,R15)
    00000762              L587:                             
      LanternT.c   318                        }
      LanternT.c   319    
      LanternT.c   320                        GetKey(&key);
    00000762 480B                   JSR         @R8
    00000764 64F3                   MOV         R15,R4
      LanternT.c   321    
      LanternT.c   322                        Open_Map(key, Maps);
    00000766 65C3                   MOV         R12,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 23-Mar-2023 23:11:43  PAGE   23


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000768 D32D                   MOV.L       L619+32,R3 ; _Open_Map
    0000076A 430B                   JSR         @R3
    0000076C 64F2                   MOV.L       @R15,R4
      LanternT.c   323                        Jump_View(key, Current_Screen);
    0000076E 65A3                   MOV         R10,R5
    00000770 D32C                   MOV.L       L619+36,R3 ; _Jump_View
    00000772 430B                   JSR         @R3
    00000774 64F2                   MOV.L       @R15,R4
      LanternT.c   324                        Check_Status(key, Cursor_Position, Current_Screen, Maps, Tower_PlaceTower, Tower_DataB
                         +ase, numOfPlace, Tower_DbSize);
    00000776 67C3                   MOV         R12,R7
    00000778 52F9                   MOV.L       @(36,R15),R2
    0000077A 66A3                   MOV         R10,R6
    0000077C 2F26                   MOV.L       R2,@-R15
    0000077E 53F6                   MOV.L       @(24,R15),R3
    00000780 9241                   MOV.W       L619+6,R2  ; H'1398
    00000782 2F36                   MOV.L       R3,@-R15
    00000784 9340                   MOV.W       L619+8,R3  ; H'039C
    00000786 32FC                   ADD         R15,R2
    00000788 2F26                   MOV.L       R2,@-R15
    0000078A 33FC                   ADD         R15,R3
    0000078C 2F36                   MOV.L       R3,@-R15
    0000078E 55F8                   MOV.L       @(32,R15),R5
    00000790 D325                   MOV.L       L619+40,R3 ; _Check_Status
    00000792 430B                   JSR         @R3
    00000794 54F4                   MOV.L       @(16,R15),R4
    00000796 AF86                   BRA         L586
    00000798 7F10                   ADD         #16,R15
    0000079A              L591:                             
      LanternT.c   325                    }
      LanternT.c   326                }
      LanternT.c   327                else
      LanternT.c   328                {
      LanternT.c   329                    while (1)
      LanternT.c   330                    {
      LanternT.c   331                        Bdisp_AllClr_VRAM();
    0000079A D324                   MOV.L       L619+44,R3 ; _Bdisp_AllClr_VRAM
    0000079C 430B                   JSR         @R3
    0000079E 0009                   NOP
      LanternT.c   332                        if (numOfCreate < 10)
    000007A0 53FA                   MOV.L       @(40,R15),R3
    000007A2 E20A                   MOV         #10,R2
    000007A4 3323                   CMP/GE      R2,R3
    000007A6 8926                   BT          L592
      LanternT.c   333                        {
      LanternT.c   334                            if ((int)(timeIndex * 10) % 15 == 0)
    000007A8 902F                   MOV.W       L619+10,R0 ; H'7900
    000007AA E100                   MOV         #0,R1
    000007AC 7FF8                   ADD         #-8,R15
    000007AE 03FE                   MOV.L       @(R0,R15),R3
    000007B0 902B                   MOV.W       L619+10,R0 ; H'7900
    000007B2 2F36                   MOV.L       R3,@-R15
    000007B4 03FE                   MOV.L       @(R0,R15),R3
    000007B6 2F36                   MOV.L       R3,@-R15
    000007B8 2F16                   MOV.L       R1,@-R15
    000007BA D11D                   MOV.L       L619+48,R1 ; H'40240000
    000007BC D01D                   MOV.L       L619+52,R0 ; __muld




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 23-Mar-2023 23:11:43  PAGE   24


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000007BE 2F16                   MOV.L       R1,@-R15
    000007C0 63F3                   MOV         R15,R3
    000007C2 7310                   ADD         #16,R3
    000007C4 400B                   JSR         @R0
    000007C6 2F36                   MOV.L       R3,@-R15
    000007C8 D11B                   MOV.L       L619+56,R1 ; __dtoi
    000007CA 410B                   JSR         @R1
    000007CC 0009                   NOP
    000007CE 6103                   MOV         R0,R1
    000007D0 D31A                   MOV.L       L619+60,R3 ; __modls
    000007D2 430B                   JSR         @R3
    000007D4 E00F                   MOV         #15,R0
    000007D6 8800                   CMP/EQ      #0,R0
    000007D8 8B0D                   BF          L592
      LanternT.c   335                            {
      LanternT.c   336                                Monster_Create(Monster_DataBase, Monster_LiveMonster, Monster_DbSize, &numOfMo
                         +nster, round);
    000007DA 65B3                   MOV         R11,R5
    000007DC 9416                   MOV.W       L619+12,R4 ; H'01F0
    000007DE 53FC                   MOV.L       @(48,R15),R3
    000007E0 2F36                   MOV.L       R3,@-R15
    000007E2 67F3                   MOV         R15,R7
    000007E4 56FF                   MOV.L       @(60,R15),R6
    000007E6 770C                   ADD         #12,R7
    000007E8 D315                   MOV.L       L619+64,R3 ; _Monster_Create
    000007EA 430B                   JSR         @R3
    000007EC 34FC                   ADD         R15,R4
    000007EE 7F04                   ADD         #4,R15
      LanternT.c   337                                numOfCreate++;
    000007F0 52FA                   MOV.L       @(40,R15),R2
    000007F2 7201                   ADD         #1,R2
    000007F4 1F2A                   MOV.L       R2,@(40,R15)
    000007F6              L592:                             
      LanternT.c   338                            }
      LanternT.c   339                        }
      LanternT.c   340                        if (numOfMonster != 0)
    000007F6 53F2                   MOV.L       @(8,R15),R3
    000007F8 2338                   TST         R3,R3
    000007FA 8958                   BT          L594
      LanternT.c   341                        {
      LanternT.c   342                            for (i = 0; i < numOfMonster; i++)
    000007FC A054                   BRA         L595
    000007FE 69E3                   MOV         R14,R9
    00000800              L619:                             
    00000800 0390                   .DATA.W     H'0390
    00000802 03A8                   .DATA.W     H'03A8
    00000804 13B0                   .DATA.W     H'13B0
    00000806 1398                   .DATA.W     H'1398
    00000808 039C                   .DATA.W     H'039C
    0000080A 7900                   .DATA.W     H'7900
    0000080C 01F0                   .DATA.W     H'01F0
    0000080E 0000                   .DATA.W     0
    00000810 <00000000>             .DATA.L     _Tower_Place
    00000814 <00000000>             .DATA.L     _Cursor_Move
    00000818 <00000000>             .DATA.L     _Map_Initialization
    0000081C <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    00000820 <00000000>             .DATA.L     _Open_Map




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 23-Mar-2023 23:11:43  PAGE   25


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000824 <00000000>             .DATA.L     _Jump_View
    00000828 <00000000>             .DATA.L     _Check_Status
    0000082C <00000000>             .DATA.L     _Bdisp_AllClr_VRAM
    00000830 40240000               .DATA.L     H'40240000
    00000834 <00000000>             .DATA.L     __muld
    00000838 <00000000>             .DATA.L     __dtoi
    0000083C <00000000>             .DATA.L     __modls
    00000840 <00000000>             .DATA.L     _Monster_Create
    00000844              L596:                             
      LanternT.c   343                            {
      LanternT.c   344                                if (!Monster_Move(Direction, numOfDirection, Maps, Monster_LiveMonster[i], &nu
                         +mOfMonster, base, Time))
    00000844 908A                   MOV.W       L620,R0    ; H'7900
    00000846 66C3                   MOV         R12,R6
    00000848 9489                   MOV.W       L620+2,R4  ; H'23A0
    0000084A 02FE                   MOV.L       @(R0,R15),R2
    0000084C 9086                   MOV.W       L620,R0    ; H'7900
    0000084E 2F26                   MOV.L       R2,@-R15
    00000850 02FE                   MOV.L       @(R0,R15),R2
    00000852 6093                   MOV         R9,R0
    00000854 2F26                   MOV.L       R2,@-R15
    00000856 4008                   SHLL2       R0
    00000858 53F5                   MOV.L       @(20,R15),R3
    0000085A 2F36                   MOV.L       R3,@-R15
    0000085C D343                   MOV.L       L620+16,R3 ; _Monster_Move
    0000085E 62F3                   MOV         R15,R2
    00000860 7214                   ADD         #20,R2
    00000862 2F26                   MOV.L       R2,@-R15
    00000864 07BE                   MOV.L       @(R0,R11),R7
    00000866 55FF                   MOV.L       @(60,R15),R5
    00000868 430B                   JSR         @R3
    0000086A 34FC                   ADD         R15,R4
    0000086C 2008                   TST         R0,R0
    0000086E 8F1A                   BF/S        L597
    00000870 7F10                   ADD         #16,R15
      LanternT.c   345                                {
      LanternT.c   346                                    base->damage = base->damage + Monster_LiveMonster[i]->Monster_Live->attack
                         +;
    00000872 6093                   MOV         R9,R0
    00000874 53F3                   MOV.L       @(12,R15),R3
    00000876 4008                   SHLL2       R0
    00000878 6233                   MOV         R3,R2
    0000087A 5123                   MOV.L       @(12,R2),R1
    0000087C 2F16                   MOV.L       R1,@-R15
    0000087E 5122                   MOV.L       @(8,R2),R1
    00000880 2F16                   MOV.L       R1,@-R15
    00000882 E208                   MOV         #8,R2
    00000884 01BE                   MOV.L       @(R0,R11),R1
    00000886 323C                   ADD         R3,R2
    00000888 6112                   MOV.L       @R1,R1
    0000088A 5017                   MOV.L       @(28,R1),R0
    0000088C 2F06                   MOV.L       R0,@-R15
    0000088E 5016                   MOV.L       @(24,R1),R0
    00000890 2F06                   MOV.L       R0,@-R15
    00000892 2F26                   MOV.L       R2,@-R15
    00000894 D236                   MOV.L       L620+20,R2 ; __addd
    00000896 420B                   JSR         @R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 23-Mar-2023 23:11:43  PAGE   26


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000898 0009                   NOP
      LanternT.c   347                                    free_Monster(Monster_LiveMonster, &numOfMonster, i);
    0000089A 6693                   MOV         R9,R6
    0000089C D335                   MOV.L       L620+24,R3 ; _free_Monster
    0000089E 65F3                   MOV         R15,R5
    000008A0 7508                   ADD         #8,R5
    000008A2 430B                   JSR         @R3
    000008A4 64B3                   MOV         R11,R4
    000008A6              L597:                             
    000008A6 7901                   ADD         #1,R9
    000008A8              L595:                             
    000008A8 52F2                   MOV.L       @(8,R15),R2
    000008AA 3922                   CMP/HS      R2,R9
    000008AC 8BCA                   BF          L596
    000008AE              L594:                             
      LanternT.c   348                                }
      LanternT.c   349                            }
      LanternT.c   350                        }
      LanternT.c   351    
      LanternT.c   352                        Screen_Move(Current_Screen);
    000008AE D232                   MOV.L       L620+28,R2 ; _Screen_Move
    000008B0 420B                   JSR         @R2
    000008B2 64A3                   MOV         R10,R4
      LanternT.c   353                        Battle_Map(Maps, Current_Screen, Current_Screen, Monster_LiveMonster, numOfMonster);
    000008B4 53F2                   MOV.L       @(8,R15),R3
    000008B6 67B3                   MOV         R11,R7
    000008B8 2F36                   MOV.L       R3,@-R15
    000008BA 66A3                   MOV         R10,R6
    000008BC D32F                   MOV.L       L620+32,R3 ; _Battle_Map
    000008BE 65A3                   MOV         R10,R5
    000008C0 430B                   JSR         @R3
    000008C2 64C3                   MOV         R12,R4
      LanternT.c   354                        Bdisp_PutDisp_DD();
    000008C4 D22E                   MOV.L       L620+36,R2 ; _Bdisp_PutDisp_DD
    000008C6 420B                   JSR         @R2
    000008C8 7F04                   ADD         #4,R15
      LanternT.c   355                        Tower_Attack(Tower_PlaceTower, numOfPlace, Monster_LiveMonster, numOfMonster);
    000008CA 66B3                   MOV         R11,R6
    000008CC 55F5                   MOV.L       @(20,R15),R5
    000008CE 57F2                   MOV.L       @(8,R15),R7
    000008D0 9446                   MOV.W       L620+4,R4  ; H'0390
    000008D2 D32C                   MOV.L       L620+40,R3 ; _Tower_Attack
    000008D4 430B                   JSR         @R3
    000008D6 34FC                   ADD         R15,R4
      LanternT.c   356                        Check_MonsterLive(Monster_LiveMonster, &numOfMonster);
    000008D8 D22B                   MOV.L       L620+44,R2 ; _Check_MonsterLive
    000008DA 65F3                   MOV         R15,R5
    000008DC 7508                   ADD         #8,R5
    000008DE 420B                   JSR         @R2
    000008E0 64B3                   MOV         R11,R4
      LanternT.c   357                        if (base->damage >= base->health)
    000008E2 53F3                   MOV.L       @(12,R15),R3
    000008E4 5233                   MOV.L       @(12,R3),R2
    000008E6 2F26                   MOV.L       R2,@-R15
    000008E8 5232                   MOV.L       @(8,R3),R2
    000008EA 2F26                   MOV.L       R2,@-R15
    000008EC 51F5                   MOV.L       @(20,R15),R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 23-Mar-2023 23:11:43  PAGE   27


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000008EE 5211                   MOV.L       @(4,R1),R2
    000008F0 D326                   MOV.L       L620+48,R3 ; __ged
    000008F2 2F26                   MOV.L       R2,@-R15
    000008F4 6212                   MOV.L       @R1,R2
    000008F6 430B                   JSR         @R3
    000008F8 2F26                   MOV.L       R2,@-R15
    000008FA 8800                   CMP/EQ      #0,R0
    000008FC 8902                   BT          L598
      LanternT.c   358                        {
      LanternT.c   359                            IsGameOver = 1;
    000008FE E044                   MOV         #68,R0
      LanternT.c   360                            break;
    00000900 AEB4                   BRA         L582
    00000902 0FD6                   MOV.L       R13,@(R0,R15)
    00000904              L598:                             
      LanternT.c   361                        }
      LanternT.c   362                        if (!numOfMonster)
    00000904 52F2                   MOV.L       @(8,R15),R2
    00000906 2228                   TST         R2,R2
    00000908 8B11                   BF          L600
      LanternT.c   363                        {
      LanternT.c   364                            if (numOfCreate >= 10)
    0000090A E30A                   MOV         #10,R3
    0000090C 52FA                   MOV.L       @(40,R15),R2
    0000090E 3233                   CMP/GE      R3,R2
    00000910 8B0D                   BF          L600
      LanternT.c   365                            {
      LanternT.c   366                                numOfCreate = 0;
      LanternT.c   367                                IsPlaceOver = 0;
      LanternT.c   368                                IsPlace = 1;
    00000912 E048                   MOV         #72,R0
      LanternT.c   369                                round++;
      LanternT.c   370                                timeIndex = 0;
    00000914 9125                   MOV.W       L620+6,R1  ; H'78F4
    00000916 1FEA                   MOV.L       R14,@(40,R15)
    00000918 1FE7                   MOV.L       R14,@(28,R15)
    0000091A 31FC                   ADD         R15,R1
    0000091C 0FD6                   MOV.L       R13,@(R0,R15)
    0000091E E000                   MOV         #0,R0
    00000920 52FC                   MOV.L       @(48,R15),R2
    00000922 7201                   ADD         #1,R2
    00000924 1F2C                   MOV.L       R2,@(48,R15)
    00000926 2102                   MOV.L       R0,@R1
    00000928 1101                   MOV.L       R0,@(4,R1)
      LanternT.c   371                                break;
    0000092A AE9F                   BRA         L582
    0000092C 0009                   NOP
    0000092E              L600:                             
      LanternT.c   372                            }
      LanternT.c   373                        }
      LanternT.c   374                        Sleep((int)(Time*1000));
    0000092E D318                   MOV.L       L620+52,R3 ; _Sleep
    00000930 430B                   JSR         @R3
    00000932 E464                   MOV         #100,R4
      LanternT.c   375                        timeIndex += Time;
    00000934 9016                   MOV.W       L620+8,R0  ; H'78F8
    00000936 02FE                   MOV.L       @(R0,R15),R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 23-Mar-2023 23:11:43  PAGE   28


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000938 9014                   MOV.W       L620+8,R0  ; H'78F8
    0000093A 2F26                   MOV.L       R2,@-R15
    0000093C 02FE                   MOV.L       @(R0,R15),R2
    0000093E 2F26                   MOV.L       R2,@-R15
    00000940 9011                   MOV.W       L620+10,R0 ; H'7908
    00000942 03FE                   MOV.L       @(R0,R15),R3
    00000944 900F                   MOV.W       L620+10,R0 ; H'7908
    00000946 2F36                   MOV.L       R3,@-R15
    00000948 03FE                   MOV.L       @(R0,R15),R3
    0000094A 2F36                   MOV.L       R3,@-R15
    0000094C 920C                   MOV.W       L620+12,R2 ; H'7904
    0000094E 32FC                   ADD         R15,R2
    00000950 2F26                   MOV.L       R2,@-R15
    00000952 D207                   MOV.L       L620+20,R2 ; __addd
    00000954 420B                   JSR         @R2
    00000956 0009                   NOP
    00000958 AF1F                   BRA         L591
    0000095A 0009                   NOP
    0000095C              L620:                             
    0000095C 7900                   .DATA.W     H'7900
    0000095E 23A0                   .DATA.W     H'23A0
    00000960 0390                   .DATA.W     H'0390
    00000962 78F4                   .DATA.W     H'78F4
    00000964 78F8                   .DATA.W     H'78F8
    00000966 7908                   .DATA.W     H'7908
    00000968 7904                   .DATA.W     H'7904
    0000096A 0000                   .DATA.W     0
    0000096C <00000000>             .DATA.L     _Monster_Move
    00000970 <00000000>             .DATA.L     __addd
    00000974 <00000000>             .DATA.L     _free_Monster
    00000978 <00000000>             .DATA.L     _Screen_Move
    0000097C <00000000>             .DATA.L     _Battle_Map
    00000980 <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    00000984 <00000000>             .DATA.L     _Tower_Attack
    00000988 <00000000>             .DATA.L     _Check_MonsterLive
    0000098C <00000000>             .DATA.L     __ged
    00000990 <00000000>             .DATA.L     _Sleep
    00000994              L603:                             
      LanternT.c   376                    }
      LanternT.c   377                }
      LanternT.c   378            }
      LanternT.c   379    
      LanternT.c   380            else
      LanternT.c   381            {
      LanternT.c   382                break;
      LanternT.c   383            }
      LanternT.c   384        }
      LanternT.c   385    
      LanternT.c   386        free(Tower_DataBase);
    00000994 9417                   MOV.W       L621,R4    ; H'1390
    00000996 D30E                   MOV.L       L621+10,R3 ; _free
    00000998 430B                   JSR         @R3
    0000099A 34FC                   ADD         R15,R4
      LanternT.c   387        free(Tower_Buffer);
    0000099C 9414                   MOV.W       L621+2,R4  ; H'037C
    0000099E D20C                   MOV.L       L621+10,R2 ; _free
    000009A0 420B                   JSR         @R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 23-Mar-2023 23:11:43  PAGE   29


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000009A2 34FC                   ADD         R15,R4
      LanternT.c   388        free(Tower_PlaceTower);
    000009A4 9411                   MOV.W       L621+4,R4  ; H'0390
    000009A6 D30A                   MOV.L       L621+10,R3 ; _free
    000009A8 430B                   JSR         @R3
    000009AA 34FC                   ADD         R15,R4
      LanternT.c   389        return 1;
    000009AC E001                   MOV         #1,R0
      LanternT.c   390    }
    000009AE              L546:                             
    000009AE 910D                   MOV.W       L621+6,R1  ; H'79A4
    000009B0 3F1C                   ADD         R1,R15
    000009B2 4F16                   LDS.L       @R15+,MACL
    000009B4 4F26                   LDS.L       @R15+,PR
    000009B6 68F6                   MOV.L       @R15+,R8
    000009B8 69F6                   MOV.L       @R15+,R9
    000009BA 6AF6                   MOV.L       @R15+,R10
    000009BC 6BF6                   MOV.L       @R15+,R11
    000009BE 6CF6                   MOV.L       @R15+,R12
    000009C0 6DF6                   MOV.L       @R15+,R13
    000009C2 000B                   RTS
    000009C4 6EF6                   MOV.L       @R15+,R14
    000009C6              L621:                             
    000009C6 1390                   .DATA.W     H'1390
    000009C8 037C                   .DATA.W     H'037C
    000009CA 0390                   .DATA.W     H'0390
    000009CC 79A4                   .DATA.W     H'79A4
    000009CE 0000                   .DATA.W     0
    000009D0 <00000000>             .DATA.L     _free
      LanternT.c   391    
      LanternT.c   392    #pragma section _BR_Size
      LanternT.c   393    unsigned long BR_Size;
      LanternT.c   394    #pragma section
      LanternT.c   395    
      LanternT.c   396    #pragma section _TOP
      LanternT.c   397    
      LanternT.c   398    int InitializeSystem(int isAppli, unsigned short OptionNum)
P_T 00000000              _InitializeSystem:               ; function: InitializeSystem
                                                           ; frame size=0
      LanternT.c   399    {
      LanternT.c   400        return INIT_ADDIN_APPLICATION(isAppli, OptionNum);
    00000000 D301                   MOV.L       L622+2,R3  ; _INIT_ADDIN_APPLICATION
    00000002 432B                   JMP         @R3
    00000004 0009                   NOP
    00000006              L622:                             
    00000006 0000                   .DATA.W     0
    00000008 <00000000>             .DATA.L     _INIT_ADDIN_APPLICATION
      LanternT.c   401    }
      LanternT.c   402    
      LanternT.c   403    #pragma section
C   00000000              L390:
    00000000 5155495420             .SDATA      "QUIT GAME"
             47414D45     
    00000009 00                     .DATA.B     H'00
    0000000A 00000002               .RES.W      1
    0000000C              L391:
    0000000C 5072657373             .SDATA      "Press [EXE] key"




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 23-Mar-2023 23:11:43  PAGE   30


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             205B455845   
             5D206B6579   
    0000001B 00                     .DATA.B     H'00
    0000001C              L432:
    0000001C 5C5C637264             .SDATA      "\\crd0\tower.txt"
             305C746F77   
             65722E7478   
             74           
    0000002C 00                     .DATA.B     H'00
    0000002D 00000001               .RES.B      1
    0000002E 00000002               .RES.W      1
    00000030              L434:
    00000030 5265616420             .SDATA      "Read DATABASE"
             4441544142   
             415345       
    0000003D 00                     .DATA.B     H'00
    0000003E 00000002               .RES.W      1
    00000040              L435:
    00000040 4552524F52             .SDATA      "ERROR"
    00000045 00                     .DATA.B     H'00
    00000046 00000002               .RES.W      1
    00000048              L438:
    00000048 4572726F72             .SDATA      "Error Code:%d"
             20436F6465   
             3A2564       
    00000055 00                     .DATA.B     H'00
    00000056 00000002               .RES.W      1
    00000058              L439:
    00000058 4C696E6520             .SDATA      "Line Number:%d"
             4E756D6265   
             723A2564     
    00000066 00                     .DATA.B     H'00
    00000067 00000001               .RES.B      1
    00000068              L442:
    00000068 746F776572             .SDATA      "tower"
    0000006D 00                     .DATA.B     H'00
    0000006E 00000002               .RES.W      1
    00000070              L444:
    00000070 6964                   .SDATA      "id"
    00000072 00                     .DATA.B     H'00
    00000073 00000001               .RES.B      1
    00000074              L445:
    00000074 546F776572             .SDATA      "Tower_Level"
             5F4C657665   
             6C           
    0000007F 00                     .DATA.B     H'00
    00000080              L446:
    00000080 4174746163             .SDATA      "Attack"
             6B           
    00000086 00                     .DATA.B     H'00
    00000087 00000001               .RES.B      1
    00000088              L447:
    00000088 4174746163             .SDATA      "Attack_Frequency"
             6B5F467265   
             7175656E63   
             79           
    00000098 00                     .DATA.B     H'00




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 23-Mar-2023 23:11:43  PAGE   31


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000099 00000001               .RES.B      1
    0000009A 00000002               .RES.W      1
    0000009C              L448:
    0000009C 4174746163             .SDATA      "Attack_Range"
             6B5F52616E   
             6765         
    000000A8 00                     .DATA.B     H'00
    000000A9 00000001               .RES.B      1
    000000AA 00000002               .RES.W      1
    000000AC              L449:
    000000AC 5C5C637264             .SDATA      "\\crd0\monster.txt"
             305C6D6F6E   
             737465722E   
             747874       
    000000BE 00                     .DATA.B     H'00
    000000BF 00000001               .RES.B      1
    000000C0              L455:
    000000C0 6D6F6E7374             .SDATA      "monster"
             6572         
    000000C7 00                     .DATA.B     H'00
    000000C8              L457:
    000000C8 4D6F6E7374             .SDATA      "Monster_Level"
             65725F4C65   
             76656C       
    000000D5 00                     .DATA.B     H'00
    000000D6 00000002               .RES.W      1
    000000D8              L458:
    000000D8 6865616C74             .SDATA      "health"
             68           
    000000DE 00                     .DATA.B     H'00
    000000DF 00000001               .RES.B      1
    000000E0              L459:
    000000E0 64616D6167             .SDATA      "damage"
             65           
    000000E6 00                     .DATA.B     H'00
    000000E7 00000001               .RES.B      1
    000000E8              L460:
    000000E8 6174746163             .SDATA      "attack"
             6B           
    000000EE 00                     .DATA.B     H'00
    000000EF 00000001               .RES.B      1
    000000F0              L461:
    000000F0 5370656564             .SDATA      "Speed"
    000000F5 00                     .DATA.B     H'00
    000000F6 00000002               .RES.W      1
    000000F8              L462:
    000000F8 61726D6F72             .SDATA      "armor"
    000000FD 00                     .DATA.B     H'00
    000000FE 00000002               .RES.W      1
    00000100              L463:
    00000100 62756666               .SDATA      "buff"
    00000104 00                     .DATA.B     H'00
    00000105 00000001               .RES.B      1
    00000106 00000002               .RES.W      1
    00000108              L464:
    00000108 6465627566             .SDATA      "debuff"
             66           




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 23-Mar-2023 23:11:43  PAGE   32


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000010E 00                     .DATA.B     H'00
    0000010F 00000001               .RES.B      1
    00000110              L480:
    00000110 5354415254             .SDATA      "START GAME"
             2047414D45   
    0000011A 00                     .DATA.B     H'00
    0000011B 00000001               .RES.B      1
    0000011C              L481:
    0000011C 5072657373             .SDATA      "Press [0] key"
             205B305D20   
             6B6579       
    00000129 00                     .DATA.B     H'00
    0000012A 00000002               .RES.W      1
    0000012C              L486:
    0000012C 526F756E64             .SDATA      "Round:%d"
             3A2564       
    00000134 00                     .DATA.B     H'00
B_B 00000000              _BR_Size:                        ; static: BR_Size
    00000000 00000004               .RES.L      1










































SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 23-Mar-2023 23:11:43  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         7




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:      403



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               000009D4 Byte(s)
PROGRAM  SECTION (P_BR_Size):                       00000000 Byte(s)
PROGRAM  SECTION (P_TOP):                           0000000C Byte(s)
CONSTANT SECTION (C):                               00000135 Byte(s)
CONSTANT SECTION (C_BR_Size):                       00000000 Byte(s)
CONSTANT SECTION (C_TOP):                           00000000 Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
DATA     SECTION (D_BR_Size):                       00000000 Byte(s)
DATA     SECTION (D_TOP):                           00000000 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)
BSS      SECTION (B_BR_Size):                       00000004 Byte(s)
BSS      SECTION (B_TOP):                           00000000 Byte(s)

 TOTAL PROGRAM SIZE: 00000B19 Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:           38
NUMBER OF EXTERNAL DEFINITION SYMBOLS:           4
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:           130






















*** COMMAND PARAMETER ***


  -subcommand=C:\Users\hasee\AppData\Local\Temp\hmk6931.tmp 


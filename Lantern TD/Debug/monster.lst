SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 24-Mar-2023 00:05:44  PAGE    1

************ OBJECT LISTING ************

FILE NAME: D:\c++learning\Lantern-TD\Lantern TD\monster.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

       monster.c     1    #include "fxlib.h"
       monster.c     2    #include "Fun.h"
       monster.c     3    #include "monster.h"
       monster.c     4    #include "astara.h"
       monster.c     5    #include "stdlib.h"
       monster.c     6    #include "math.h"
       monster.c     7    
       monster.c     8    LPPOSITION Check_Direction(int index, LPPOSITION position)
P   00000000              _Check_Direction:                ; function: Check_Direction
                                                           ; frame size=0
       monster.c     9    {
       monster.c    10        switch (index)
    00000000 6043                   MOV         R4,R0
    00000002 8801                   CMP/EQ      #1,R0
    00000004 8907                   BT          L414
    00000006 8802                   CMP/EQ      #2,R0
    00000008 8908                   BT          L415
    0000000A 8803                   CMP/EQ      #3,R0
    0000000C 890A                   BT          L416
    0000000E 8804                   CMP/EQ      #4,R0
    00000010 890C                   BT          L417
    00000012 A010                   BRA         L418
    00000014 0009                   NOP
    00000016              L414:                            ; case label 
       monster.c    11        {
       monster.c    12        case 1:
       monster.c    13            position->x = position->x - 1;
    00000016 6352                   MOV.L       @R5,R3
    00000018 A002                   BRA         L443
    0000001A 73FF                   ADD         #-1,R3
    0000001C              L415:                            ; case label 
       monster.c    14            return position;
       monster.c    15        case 2:
       monster.c    16            position->x = position->x + 1;
    0000001C 6352                   MOV.L       @R5,R3
    0000001E 7301                   ADD         #1,R3
    00000020              L443:                             
    00000020 A007                   BRA         L412
    00000022 2532                   MOV.L       R3,@R5
    00000024              L416:                            ; case label 
       monster.c    17            return position;
       monster.c    18        case 3:
       monster.c    19            position->y = position->y - 1;
    00000024 5351                   MOV.L       @(4,R5),R3
    00000026 73FF                   ADD         #-1,R3
    00000028 A003                   BRA         L412
    0000002A 1531                   MOV.L       R3,@(4,R5)
    0000002C              L417:                            ; case label 
       monster.c    20            return position;
       monster.c    21        case 4:
       monster.c    22            position->y = position->y + 1;
    0000002C 5351                   MOV.L       @(4,R5),R3
    0000002E 7301                   ADD         #1,R3
    00000030 1531                   MOV.L       R3,@(4,R5)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 24-Mar-2023 00:05:44  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000032              L412:
       monster.c    23            return position;
    00000032 000B                   RTS
    00000034 6053                   MOV         R5,R0
    00000036              L418:                            ; default label 
       monster.c    24        default:
       monster.c    25            return NULL;
    00000036 E000                   MOV         #0,R0
       monster.c    26        }
       monster.c    27    }
    00000038              L427:                             
    00000038 000B                   RTS
    0000003A 0009                   NOP
       monster.c    28    
       monster.c    29    void Data_Match_M(LPMONSTERLIVE monster, LPMONSTER monster_db, int x, int y, int round)
    0000003C              _Data_Match_M:                   ; function: Data_Match_M
                                                           ; frame size=24
                                                           ; used runtime library name:
                                                           ; __addd, __itod
    0000003C 4F22                   STS.L       PR,@-R15
       monster.c    30    {
       monster.c    31        monster->Monster_Live->id = monster_db->id;
    0000003E 6342                   MOV.L       @R4,R3
    00000040 6252                   MOV.L       @R5,R2
    00000042 2322                   MOV.L       R2,@R3
       monster.c    32        monster->Monster_Live->Monster_Level = monster_db->Monster_Level;
    00000044 6342                   MOV.L       @R4,R3
    00000046 5251                   MOV.L       @(4,R5),R2
       monster.c    33        monster->Monster_Live->health = monster_db->health + 10 * round;
    00000048 D196                   MOV.L       L444,R1    ; __itod
    0000004A 1321                   MOV.L       R2,@(4,R3)
    0000004C 6342                   MOV.L       @R4,R3
    0000004E 5253                   MOV.L       @(12,R5),R2
    00000050 2F26                   MOV.L       R2,@-R15
    00000052 5252                   MOV.L       @(8,R5),R2
    00000054 2F26                   MOV.L       R2,@-R15
    00000056 50F3                   MOV.L       @(12,R15),R0
    00000058 6203                   MOV         R0,R2
    0000005A 4008                   SHLL2       R0
    0000005C 302C                   ADD         R2,R0
    0000005E 4000                   SHLL        R0
    00000060 7FF8                   ADD         #-8,R15
    00000062 410B                   JSR         @R1
    00000064 2FF6                   MOV.L       R15,@-R15
    00000066 E008                   MOV         #8,R0
    00000068 D28F                   MOV.L       L444+4,R2  ; __addd
    0000006A 303C                   ADD         R3,R0
    0000006C 420B                   JSR         @R2
    0000006E 2F06                   MOV.L       R0,@-R15
       monster.c    34        monster->Monster_Live->damage = monster_db->damage;
    00000070 6142                   MOV.L       @R4,R1
    00000072 6253                   MOV         R5,R2
    00000074 7210                   ADD         #16,R2
    00000076 7110                   ADD         #16,R1
    00000078 6022                   MOV.L       @R2,R0
       monster.c    35        monster->Monster_Live->attack = monster_db->attack;
    0000007A 6353                   MOV         R5,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 24-Mar-2023 00:05:44  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000007C 2102                   MOV.L       R0,@R1
    0000007E 7318                   ADD         #24,R3
    00000080 5021                   MOV.L       @(4,R2),R0
       monster.c    36        monster->Monster_Live->Speed = monster_db->Speed;
    00000082 6253                   MOV         R5,R2
    00000084 1101                   MOV.L       R0,@(4,R1)
    00000086 7220                   ADD         #32,R2
    00000088 6142                   MOV.L       @R4,R1
    0000008A 7118                   ADD         #24,R1
    0000008C 6032                   MOV.L       @R3,R0
    0000008E 2102                   MOV.L       R0,@R1
    00000090 5031                   MOV.L       @(4,R3),R0
       monster.c    37        monster->Monster_Live->armor = monster_db->armor;
    00000092 6353                   MOV         R5,R3
    00000094 1101                   MOV.L       R0,@(4,R1)
    00000096 7328                   ADD         #40,R3
    00000098 6142                   MOV.L       @R4,R1
    0000009A 7120                   ADD         #32,R1
    0000009C 6022                   MOV.L       @R2,R0
    0000009E 2102                   MOV.L       R0,@R1
    000000A0 5021                   MOV.L       @(4,R2),R0
    000000A2 1101                   MOV.L       R0,@(4,R1)
    000000A4 6142                   MOV.L       @R4,R1
    000000A6 7128                   ADD         #40,R1
    000000A8 6032                   MOV.L       @R3,R0
    000000AA 2102                   MOV.L       R0,@R1
    000000AC 5031                   MOV.L       @(4,R3),R0
    000000AE 1101                   MOV.L       R0,@(4,R1)
       monster.c    38        monster->Monster_Live->buff = monster_db->buff;
    000000B0 6342                   MOV.L       @R4,R3
    000000B2 525D                   MOV.L       @(52,R5),R2
    000000B4 132D                   MOV.L       R2,@(52,R3)
       monster.c    39        monster->Monster_Live->debuff = monster_db->debuff;
    000000B6 6342                   MOV.L       @R4,R3
    000000B8 525E                   MOV.L       @(56,R5),R2
       monster.c    40        monster->position->x = x;
       monster.c    41        monster->position->y = y;
       monster.c    42        monster->target_position->x = x;
       monster.c    43        monster->target_position->y = y;
       monster.c    44        monster->MoveStep = 0;
    000000BA E500                   MOV         #0,R5
    000000BC 132E                   MOV.L       R2,@(56,R3)
    000000BE 5341                   MOV.L       @(4,R4),R3
    000000C0 2362                   MOV.L       R6,@R3
    000000C2 5241                   MOV.L       @(4,R4),R2
    000000C4 1271                   MOV.L       R7,@(4,R2)
    000000C6 5342                   MOV.L       @(8,R4),R3
    000000C8 2362                   MOV.L       R6,@R3
       monster.c    45        monster->Move_Distance = 0;
       monster.c    46        monster->IsMoveComplete = 1;
    000000CA E301                   MOV         #1,R3
    000000CC 5242                   MOV.L       @(8,R4),R2
    000000CE 1271                   MOV.L       R7,@(4,R2)
    000000D0 1453                   MOV.L       R5,@(12,R4)
    000000D2 1454                   MOV.L       R5,@(16,R4)
       monster.c    47    }
    000000D4 4F26                   LDS.L       @R15+,PR




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 24-Mar-2023 00:05:44  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000D6 000B                   RTS
    000000D8 1435                   MOV.L       R3,@(20,R4)
       monster.c    48    
       monster.c    49    void Monster_Create(LPMONSTER Monster_DataBase[], LPMONSTERLIVE Monster_liveMonster[], int numOfDbSize_M, 
                         +int *numOfMonster, int round)
    000000DA              _Monster_Create:                 ; function: Monster_Create
                                                           ; frame size=36
                                                           ; used runtime library name:
                                                           ; __modls
    000000DA 2FE6                   MOV.L       R14,@-R15
    000000DC 2FD6                   MOV.L       R13,@-R15
    000000DE 6E73                   MOV         R7,R14
    000000E0 D372                   MOV.L       L444+8,R3  ; __modls
    000000E2 6D53                   MOV         R5,R13
    000000E4 2FC6                   MOV.L       R12,@-R15
    000000E6 E700                   MOV         #0,R7
    000000E8 2FB6                   MOV.L       R11,@-R15
    000000EA 374C                   ADD         R4,R7
    000000EC 2FA6                   MOV.L       R10,@-R15
    000000EE 6B73                   MOV         R7,R11
    000000F0 2F96                   MOV.L       R9,@-R15
       monster.c    50    {
       monster.c    51        int i;
       monster.c    52    
       monster.c    53        for (i = 0; i < numOfDbSize_M; i++)
    000000F2 EA00                   MOV         #0,R10
    000000F4 2F86                   MOV.L       R8,@-R15
    000000F6 6473                   MOV         R7,R4
    000000F8 4F22                   STS.L       PR,@-R15
    000000FA 65A3                   MOV         R10,R5
    000000FC 59F8                   MOV.L       @(32,R15),R9
    000000FE 6193                   MOV         R9,R1
    00000100 430B                   JSR         @R3
    00000102 E005                   MOV         #5,R0
    00000104 DC6A                   MOV.L       L444+12,R12; _malloc
    00000106 4615                   CMP/PL      R6
    00000108 6703                   MOV         R0,R7
    0000010A 8F36                   BF/S        L428
    0000010C 7764                   ADD         #100,R7
    0000010E              L429:                             
       monster.c    54        {
       monster.c    55            if (Monster_DataBase[i]->id == (round % 5) + 100)
    0000010E 6342                   MOV.L       @R4,R3
    00000110 6232                   MOV.L       @R3,R2
    00000112 3270                   CMP/EQ      R7,R2
    00000114 8B2C                   BF          L430
       monster.c    56            {
       monster.c    57    
       monster.c    58                Monster_liveMonster[*numOfMonster] = (LPMONSTERLIVE)malloc(sizeof(Monster_Live));
    00000116 61E2                   MOV.L       @R14,R1
    00000118 4108                   SHLL2       R1
    0000011A 31DC                   ADD         R13,R1
    0000011C 6813                   MOV         R1,R8
    0000011E 4C0B                   JSR         @R12
    00000120 E418                   MOV         #24,R4
    00000122 2802                   MOV.L       R0,@R8
       monster.c    59                Monster_liveMonster[*numOfMonster]->Monster_Live = (LPMONSTER)malloc(sizeof(Monster));




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 24-Mar-2023 00:05:44  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000124 60E2                   MOV.L       @R14,R0
    00000126 4008                   SHLL2       R0
    00000128 08DE                   MOV.L       @(R0,R13),R8
    0000012A 4C0B                   JSR         @R12
    0000012C E43C                   MOV         #60,R4
    0000012E 2802                   MOV.L       R0,@R8
       monster.c    60                Monster_liveMonster[*numOfMonster]->position = (LPPOSITION)malloc(sizeof(POSITION));
    00000130 60E2                   MOV.L       @R14,R0
    00000132 4008                   SHLL2       R0
    00000134 08DE                   MOV.L       @(R0,R13),R8
    00000136 7804                   ADD         #4,R8
    00000138 4C0B                   JSR         @R12
    0000013A E408                   MOV         #8,R4
    0000013C 2802                   MOV.L       R0,@R8
       monster.c    61                Monster_liveMonster[*numOfMonster]->target_position = (LPPOSITION)malloc(sizeof(POSITION));
    0000013E 60E2                   MOV.L       @R14,R0
    00000140 4008                   SHLL2       R0
    00000142 08DE                   MOV.L       @(R0,R13),R8
    00000144 7808                   ADD         #8,R8
    00000146 4C0B                   JSR         @R12
    00000148 E408                   MOV         #8,R4
       monster.c    62                Data_Match_M(Monster_liveMonster[*numOfMonster], Monster_DataBase[i], 2, 4, round);
    0000014A E704                   MOV         #4,R7
    0000014C 2802                   MOV.L       R0,@R8
    0000014E E602                   MOV         #2,R6
    00000150 2F96                   MOV.L       R9,@-R15
    00000152 65B2                   MOV.L       @R11,R5
    00000154 60E2                   MOV.L       @R14,R0
    00000156 4008                   SHLL2       R0
    00000158 BF70                   BSR         _Data_Match_M
    0000015A 04DE                   MOV.L       @(R0,R13),R4
    0000015C 7F04                   ADD         #4,R15
       monster.c    63                Monster_liveMonster[*numOfMonster]->Monster_Live->ability = NULL;
    0000015E 60E2                   MOV.L       @R14,R0
    00000160 4008                   SHLL2       R0
    00000162 03DE                   MOV.L       @(R0,R13),R3
    00000164 6232                   MOV.L       @R3,R2
    00000166 12AC                   MOV.L       R10,@(48,R2)
       monster.c    64                *numOfMonster = *numOfMonster + 1;
    00000168 63E2                   MOV.L       @R14,R3
    0000016A 7301                   ADD         #1,R3
       monster.c    65    
       monster.c    66                break;
    0000016C A005                   BRA         L428
    0000016E 2E32                   MOV.L       R3,@R14
    00000170              L430:                             
    00000170 7501                   ADD         #1,R5
    00000172 7B04                   ADD         #4,R11
    00000174 3563                   CMP/GE      R6,R5
    00000176 8FCA                   BF/S        L429
    00000178 7404                   ADD         #4,R4
    0000017A              L428:                             
       monster.c    67            }
       monster.c    68        }
       monster.c    69    }
    0000017A 4F26                   LDS.L       @R15+,PR
    0000017C 68F6                   MOV.L       @R15+,R8




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 24-Mar-2023 00:05:44  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000017E 69F6                   MOV.L       @R15+,R9
    00000180 6AF6                   MOV.L       @R15+,R10
    00000182 6BF6                   MOV.L       @R15+,R11
    00000184 6CF6                   MOV.L       @R15+,R12
    00000186 6DF6                   MOV.L       @R15+,R13
    00000188 000B                   RTS
    0000018A 6EF6                   MOV.L       @R15+,R14
       monster.c    70    
       monster.c    71    int Monster_Move(int *Direction, int numOfDirection, int *Map, LPMONSTERLIVE Monster_LiveMonster, int *num
                         +OfMonster, LPBASE base, double Time)
    0000018C              _Monster_Move:                   ; function: Monster_Move
                                                           ; frame size=72
                                                           ; used runtime library name:
                                                           ; __addd, __muld, __dtoi, __itod
    0000018C 2FE6                   MOV.L       R14,@-R15
    0000018E 6E73                   MOV         R7,R14
    00000190 4F22                   STS.L       PR,@-R15
    00000192 7FF4                   ADD         #-12,R15
    00000194 2F42                   MOV.L       R4,@R15
       monster.c    72    {
       monster.c    73    
       monster.c    74        LPPOSITION Move;
       monster.c    75        int direction_x = 0, direction_y = 0;
       monster.c    76    
       monster.c    77        if (Monster_LiveMonster->IsMoveComplete)
    00000196 53E5                   MOV.L       @(20,R14),R3
    00000198 2338                   TST         R3,R3
    0000019A 890B                   BT          L432
       monster.c    78        {
       monster.c    79            if (Monster_LiveMonster->MoveStep >= numOfDirection)
    0000019C 53E3                   MOV.L       @(12,R14),R3
    0000019E 3353                   CMP/GE      R5,R3
    000001A0 8970                   BT          L413
       monster.c    80            {
       monster.c    81                return 0;
       monster.c    82            }
       monster.c    83            else
       monster.c    84            {
       monster.c    85                Move = Check_Direction(Direction[Monster_LiveMonster->MoveStep], Monster_LiveMonster->target_p
                         +osition);
    000001A2 55E2                   MOV.L       @(8,R14),R5
    000001A4 54E3                   MOV.L       @(12,R14),R4
    000001A6 4408                   SHLL2       R4
    000001A8 60F2                   MOV.L       @R15,R0
    000001AA BF29                   BSR         _Check_Direction
    000001AC 044E                   MOV.L       @(R0,R4),R4
    000001AE 6403                   MOV         R0,R4
       monster.c    86                Monster_LiveMonster->IsMoveComplete = 0;
    000001B0 E200                   MOV         #0,R2
    000001B2 1E25                   MOV.L       R2,@(20,R14)
    000001B4              L432:                             
       monster.c    87            }
       monster.c    88        }
       monster.c    89        if (Move != NULL)
    000001B4 2448                   TST         R4,R4
    000001B6 8965                   BT          L413
       monster.c    90        {




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 24-Mar-2023 00:05:44  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

       monster.c    91            direction_x = Monster_LiveMonster->target_position->x - Monster_LiveMonster->position->x;
    000001B8 54E2                   MOV.L       @(8,R14),R4
    000001BA 55E1                   MOV.L       @(4,R14),R5
    000001BC 6242                   MOV.L       @R4,R2
    000001BE 6352                   MOV.L       @R5,R3
    000001C0 3238                   SUB         R3,R2
    000001C2 2F22                   MOV.L       R2,@R15
       monster.c    92            direction_y = Monster_LiveMonster->target_position->y - Monster_LiveMonster->position->y;
    000001C4 5351                   MOV.L       @(4,R5),R3
    000001C6 5141                   MOV.L       @(4,R4),R1
    000001C8 3138                   SUB         R3,R1
       monster.c    93            if (Monster_LiveMonster->Move_Distance < 15)
    000001CA E30F                   MOV         #15,R3
    000001CC 1F12                   MOV.L       R1,@(8,R15)
    000001CE 52E4                   MOV.L       @(16,R14),R2
    000001D0 3233                   CMP/GE      R3,R2
    000001D2 8943                   BT          L437
       monster.c    94            {
       monster.c    95                Monster_LiveMonster->Move_Distance += abs((int)((direction_x * (Monster_LiveMonster->Monster_L
                         +ive->Speed)) * Time + (direction_y * (Monster_LiveMonster->Monster_Live->Speed)) * Time));
    000001D4 D233                   MOV.L       L444,R2    ; __itod
    000001D6 7FE8                   ADD         #-24,R15
    000001D8 50F6                   MOV.L       @(24,R15),R0
    000001DA 7FF8                   ADD         #-8,R15
    000001DC 420B                   JSR         @R2
    000001DE 2FF6                   MOV.L       R15,@-R15
    000001E0 64E2                   MOV.L       @R14,R4
    000001E2 1F49                   MOV.L       R4,@(36,R15)
    000001E4 5249                   MOV.L       @(36,R4),R2
    000001E6 2F26                   MOV.L       R2,@-R15
    000001E8 5248                   MOV.L       @(32,R4),R2
    000001EA 2F26                   MOV.L       R2,@-R15
    000001EC D031                   MOV.L       L444+16,R0 ; __muld
    000001EE 61F3                   MOV         R15,R1
    000001F0 7110                   ADD         #16,R1
    000001F2 400B                   JSR         @R0
    000001F4 2F16                   MOV.L       R1,@-R15
    000001F6 52FE                   MOV.L       @(56,R15),R2
    000001F8 2F26                   MOV.L       R2,@-R15
    000001FA 52FE                   MOV.L       @(56,R15),R2
    000001FC 2F26                   MOV.L       R2,@-R15
    000001FE 61F3                   MOV         R15,R1
    00000200 D22C                   MOV.L       L444+16,R2 ; __muld
    00000202 7110                   ADD         #16,R1
    00000204 420B                   JSR         @R2
    00000206 2F16                   MOV.L       R1,@-R15
    00000208 D226                   MOV.L       L444,R2    ; __itod
    0000020A 7FF0                   ADD         #-16,R15
    0000020C 50FA                   MOV.L       @(40,R15),R0
    0000020E 7FF8                   ADD         #-8,R15
    00000210 420B                   JSR         @R2
    00000212 2FF6                   MOV.L       R15,@-R15
    00000214 54FB                   MOV.L       @(44,R15),R4
    00000216 5249                   MOV.L       @(36,R4),R2
    00000218 D026                   MOV.L       L444+16,R0 ; __muld
    0000021A 2F26                   MOV.L       R2,@-R15
    0000021C 5248                   MOV.L       @(32,R4),R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 24-Mar-2023 00:05:44  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000021E 2F26                   MOV.L       R2,@-R15
    00000220 61F3                   MOV         R15,R1
    00000222 7110                   ADD         #16,R1
    00000224 400B                   JSR         @R0
    00000226 2F16                   MOV.L       R1,@-R15
    00000228 E040                   MOV         #64,R0
    0000022A 02FE                   MOV.L       @(R0,R15),R2
    0000022C 2F26                   MOV.L       R2,@-R15
    0000022E E040                   MOV         #64,R0
    00000230 02FE                   MOV.L       @(R0,R15),R2
    00000232 2F26                   MOV.L       R2,@-R15
    00000234 D21F                   MOV.L       L444+16,R2 ; __muld
    00000236 61F3                   MOV         R15,R1
    00000238 7110                   ADD         #16,R1
    0000023A 420B                   JSR         @R2
    0000023C 2F16                   MOV.L       R1,@-R15
    0000023E 60F3                   MOV         R15,R0
    00000240 D219                   MOV.L       L444+4,R2  ; __addd
    00000242 7010                   ADD         #16,R0
    00000244 420B                   JSR         @R2
    00000246 2F06                   MOV.L       R0,@-R15
    00000248 D11B                   MOV.L       L444+20,R1 ; __dtoi
    0000024A 410B                   JSR         @R1
    0000024C 0009                   NOP
    0000024E D21B                   MOV.L       L444+24,R2 ; _abs
    00000250 420B                   JSR         @R2
    00000252 6403                   MOV         R0,R4
    00000254 53E4                   MOV.L       @(16,R14),R3
    00000256 330C                   ADD         R0,R3
    00000258 A00F                   BRA         L438
    0000025A 1E34                   MOV.L       R3,@(16,R14)
    0000025C              L437:                             
       monster.c    96            }
       monster.c    97            else
       monster.c    98            {
       monster.c    99                Monster_LiveMonster->IsMoveComplete = 1;
    0000025C E101                   MOV         #1,R1
    0000025E 1E15                   MOV.L       R1,@(20,R14)
       monster.c   100                Monster_LiveMonster->MoveStep += 1;
    00000260 52E3                   MOV.L       @(12,R14),R2
       monster.c   101                Monster_LiveMonster->Move_Distance = 0;
    00000262 E100                   MOV         #0,R1
    00000264 7201                   ADD         #1,R2
    00000266 1E23                   MOV.L       R2,@(12,R14)
    00000268 1E14                   MOV.L       R1,@(16,R14)
       monster.c   102                Monster_LiveMonster->position->x = Monster_LiveMonster->target_position->x;
    0000026A 52E1                   MOV.L       @(4,R14),R2
    0000026C 51E2                   MOV.L       @(8,R14),R1
    0000026E 6012                   MOV.L       @R1,R0
    00000270 2202                   MOV.L       R0,@R2
       monster.c   103                Monster_LiveMonster->position->y = Monster_LiveMonster->target_position->y;
    00000272 52E1                   MOV.L       @(4,R14),R2
    00000274 51E2                   MOV.L       @(8,R14),R1
    00000276 5011                   MOV.L       @(4,R1),R0
    00000278 1201                   MOV.L       R0,@(4,R2)
    0000027A              L438:                             
       monster.c   104            }




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 24-Mar-2023 00:05:44  PAGE    9


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

       monster.c   105            return 1;
    0000027A E001                   MOV         #1,R0
    0000027C 7F0C                   ADD         #12,R15
    0000027E 4F26                   LDS.L       @R15+,PR
    00000280 000B                   RTS
    00000282 6EF6                   MOV.L       @R15+,R14
    00000284              L413:
       monster.c   106        }
       monster.c   107        else
       monster.c   108        {
       monster.c   109            return 0;
    00000284 E000                   MOV         #0,R0
       monster.c   110        }
       monster.c   111    }
    00000286              L434:                             
    00000286 7F0C                   ADD         #12,R15
    00000288 4F26                   LDS.L       @R15+,PR
    0000028A 000B                   RTS
    0000028C 6EF6                   MOV.L       @R15+,R14
       monster.c   112    
       monster.c   113    void Check_MonsterLive(LPMONSTERLIVE Monster_LiveMonster[], int *numOfMonster)
    0000028E              _Check_MonsterLive:              ; function: Check_MonsterLive
                                                           ; frame size=40
                                                           ; used runtime library name:
                                                           ; __ged
    0000028E 2FE6                   MOV.L       R14,@-R15
    00000290 2FD6                   MOV.L       R13,@-R15
    00000292 6D53                   MOV         R5,R13
    00000294 2FC6                   MOV.L       R12,@-R15
    00000296 6C43                   MOV         R4,R12
    00000298 2FB6                   MOV.L       R11,@-R15
    0000029A 4F22                   STS.L       PR,@-R15
       monster.c   114    {
       monster.c   115        int i;
       monster.c   116        for (i = 0; i < *numOfMonster; i++)
    0000029C DB08                   MOV.L       L444+28,R11; _free_Monster
    0000029E 7FFC                   ADD         #-4,R15
    000002A0 A026                   BRA         L440
    000002A2 EE00                   MOV         #0,R14
    000002A4              L444:                             
    000002A4 <00000000>             .DATA.L     __itod
    000002A8 <00000000>             .DATA.L     __addd
    000002AC <00000000>             .DATA.L     __modls
    000002B0 <00000000>             .DATA.L     _malloc
    000002B4 <00000000>             .DATA.L     __muld
    000002B8 <00000000>             .DATA.L     __dtoi
    000002BC <00000000>             .DATA.L     _abs
    000002C0 <00000000>             .DATA.L     _free_Monster
    000002C4              L441:                             
       monster.c   117        {
       monster.c   118            if ((Monster_LiveMonster[i]->Monster_Live->damage) >= (Monster_LiveMonster[i]->Monster_Live->healt
                         +h))
    000002C4 60E3                   MOV         R14,R0
    000002C6 4008                   SHLL2       R0
    000002C8 04CE                   MOV.L       @(R0,R12),R4
    000002CA 2F42                   MOV.L       R4,@R15
    000002CC 6442                   MOV.L       @R4,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 24-Mar-2023 00:05:44  PAGE   10


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000002CE 5345                   MOV.L       @(20,R4),R3
    000002D0 2F36                   MOV.L       R3,@-R15
    000002D2 5344                   MOV.L       @(16,R4),R3
    000002D4 2F36                   MOV.L       R3,@-R15
    000002D6 5243                   MOV.L       @(12,R4),R2
    000002D8 D30A                   MOV.L       L445,R3    ; __ged
    000002DA 2F26                   MOV.L       R2,@-R15
    000002DC 5242                   MOV.L       @(8,R4),R2
    000002DE 430B                   JSR         @R3
    000002E0 2F26                   MOV.L       R2,@-R15
    000002E2 8800                   CMP/EQ      #0,R0
    000002E4 8903                   BT          L442
       monster.c   119            {
       monster.c   120                free_Monster(Monster_LiveMonster, numOfMonster, i);
    000002E6 66E3                   MOV         R14,R6
    000002E8 65D3                   MOV         R13,R5
    000002EA 4B0B                   JSR         @R11
    000002EC 64C3                   MOV         R12,R4
    000002EE              L442:                             
    000002EE 7E01                   ADD         #1,R14
    000002F0              L440:                             
    000002F0 62D2                   MOV.L       @R13,R2
    000002F2 3E23                   CMP/GE      R2,R14
    000002F4 8BE6                   BF          L441
       monster.c   121            }
       monster.c   122        }
       monster.c   123    }
    000002F6 7F04                   ADD         #4,R15
    000002F8 4F26                   LDS.L       @R15+,PR
    000002FA 6BF6                   MOV.L       @R15+,R11
    000002FC 6CF6                   MOV.L       @R15+,R12
    000002FE 6DF6                   MOV.L       @R15+,R13
    00000300 000B                   RTS
    00000302 6EF6                   MOV.L       @R15+,R14
    00000304              L445:                             
    00000304 <00000000>             .DATA.L     __ged

























SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 24-Mar-2023 00:05:44  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:      123



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               00000308 Byte(s)
CONSTANT SECTION (C):                               00000000 Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)

 TOTAL PROGRAM SIZE: 00000308 Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:            9
NUMBER OF EXTERNAL DEFINITION SYMBOLS:           5
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            35






























*** COMMAND PARAMETER ***


  -subcommand=C:\Users\hasee\AppData\Local\Temp\hmkE0C9.tmp 

